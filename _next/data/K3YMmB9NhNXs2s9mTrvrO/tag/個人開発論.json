{"pageProps":{"entries":{"items":[{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"4ZtMC1FRX2x6vKInroc5tX","type":"Entry","createdAt":"2020-05-27T09:06:28.242Z","updatedAt":"2020-06-13T03:59:46.809Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"【翻訳】個人開発のプロダクトを6ヶ月で売却するまで","slug":"2019/12/23/232807","excerpt":"![f:id:o_tomomichi:20191213205841j:plain](https://storage.googleapis.com/blog-notsobad/images/20191213205841.jpg \"f:id:o_tomomichi:20191213205841j:plain\")\n\n新年に日本のお寺で（右が著者です）\n\nこの記事はイギリスのIndie Hacker（個人開発者）、Josh（[@joshahowarth](https://twitter.com/joshahowarth)）のブログ記事を、本人の許可を得て翻訳・掲載しているものです。\n\nオリジナルの記事はこちら↓↓ <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fmarker.medium.com%2Fhow-my-show-hn-project-got-acquired-after-6-months-954f81ca6a18\" title=\"How My Startup Got Acquired After Six Months\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://marker.medium.com/how-my-show-hn-project-got-acquired-after-6-months-954f81ca6a18\">marker.medium.com</a></cite>\n\n個人開発のプロダクトをいかに育てていくか、海外のIndie Hacker事情も垣間見えてとてもおもしろい記事です（長いけど）。","content":"![f:id:o_tomomichi:20191213205841j:plain](https://storage.googleapis.com/blog-notsobad/images/20191213205841.jpg \"f:id:o_tomomichi:20191213205841j:plain\")\n\n新年に日本のお寺で（右が著者です）\n\nこの記事はイギリスのIndie Hacker（個人開発者）、Josh（[@joshahowarth](https://twitter.com/joshahowarth)）のブログ記事を、本人の許可を得て翻訳・掲載しているものです。\n\nオリジナルの記事はこちら↓↓ <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fmarker.medium.com%2Fhow-my-show-hn-project-got-acquired-after-6-months-954f81ca6a18\" title=\"How My Startup Got Acquired After Six Months\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://marker.medium.com/how-my-show-hn-project-got-acquired-after-6-months-954f81ca6a18\">marker.medium.com</a></cite>\n\n個人開発のプロダクトをいかに育てていくか、海外のIndie Hacker事情も垣間見えてとてもおもしろい記事です（長いけど）。Product HuntやRedditなど、海外のローンチプラットフォームもたくさん出てくるので、馴染みがない方は先に以下の記事を読んでいただけるとよりイメージがつきやすいかと思います。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F15%2F192155\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（前編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/02/15/192155\">blog.notsobad.jp</a></cite>\n\n同じくIndie HackerのPieter Levesの記事です。今回のJoshも非常に参考にしているらしく、記事内でも何度か言及されています。\n\n多分に意訳していますが、翻訳の間違いなど見つけた方は info@notsobad.jp までこっそり教えてください。 それでは、以下が記事の翻訳です。\n\n* * *\n\nダイジェスト版\n=======\n\n*   👨‍💻 2ヶ月かけて、トレンドを見つけるためのアプリを開発\n*   🙂 Hacker Newsに投稿して1位を獲得\n*   📈 そこから成長と改善の4ヶ月\n*   🐦 Twitterではユーザーの人気を獲得\n*   🤯 マネタイズ失敗\n*   🎉 トラクションを評価してくれたBacklinkoの創業者Brian Deanに売却\n*   🕺🏼 名前とフォーカスを変え、デザインも一新 👉 ExplodingTopics.com\n\nロングバージョン\n========\n\n最初に言わなければならないのは、今回の出来事はすごくラッキーで、再現性のあるやり方として誰にでもおすすめできるものではないということです。\n\nその代わりにこのプロジェクトを支えてくれた人たちにお礼を伝えたいと思います。Hacker News、Indie Hackers、そしてRedditで助けてくれたみんな。\n\nそれから個人的な感謝を、ThreaderのVincent（この記事を書くよう勧めてくれました）、Adrian Love、Daniel Eckler, そして妻のAkaneに。\n\n彼らのフィードバックがこのプロジェクトを継続的に改善する助けになり、また収入のない期間に彼らの励ましがとても力になりました。\n\nどうやって始まったか\n----------\n\nTrennd.coのプロジェクトを始めたのは、日本に住んでいた4月頃です。その頃はまだTrendList.ioと呼んでいました。\n\n私は収益性のあるオンラインビジネスを立ち上げたいと考えていたのですが、大きなマーケットトレンドに乗れればそれが100倍楽になることに気づき始めていました。 競争が激しくなる前に、そのチャンスをつかまえるのです。\n\nこの成功例の1つが、JonとJustinの[Transistor.fm](https://saas.transistor.fm/)です。成長しているポッドキャストのB2Bホスティングマーケットに目をつけ、そのためのSaaSを立ち上げました。\n\nまた別の成功例はPieter Levelsで、自分自身のニーズから[Nomad List](https://levels.io/product-hunt-hacker-news-number-one/)とRemote OKを作り、デジタルノマドとリモートワークのトレンドに乗りました。\n\nマーケットへの気付きとタイミングが、この2つの例ではとても重要でした。 もちろんそれに加えて実行力が必要だったのは言うまでもありませんが。\n\nしかし事業を軌道に載せるためには、プロダクトのローンチ後も、セールスやマーケティング、それ以外の様々なハードワークを数年単位で必要とします。 私はその人生をかけた努力が、見込みのない市場ではなくちゃんと将来性のある成長市場に使われていることを、事前に確信したいと思っていました。\n\nそのために必要だったのは、自動的にWebをモニタリングして新しいトピックを拾い、Google Trendsにつなぎこめるような仕組みでした。 いや、Google Trends自体もチェックしてくれたら、その手間も不要です。\n\nいいツールがないか探したのですが、見つけることができなかったので自分のために作ることにしました😛\n\n最初のバージョンは文字通りただのCLIツールで、コンソールにトレンドのグラフを出力するだけのものでした。\n\nB2CのSaaSプロダクトとしてパッケージできればいいなと思ったけど、セールスが大変で失敗してしまうのはごめんです。 そこでまずはとりあえず無料で公開し、このツールでユーザーを集められるかを見てみることにしました。\n\naboutページでもあらかじめこんな風に書いていました。 「収入は今のところほとんどゼロで、しばらくはこの状態が続くと思います。もしかしたらずっと。」\n\n新しい技術スタックを試す機会を逃したくなかったので、ツールはNextJSのアプリとして作りました。 この技術を選択した理由は、主にサーバサイドレンダリングの機能を活用するためです。 これによって、すべての多様なトレンドページがきちんとGoogleにインデックスされるようにできました。\n\n5月の初めに、TrenndをProduct Huntの[Ship](https://www.producthunt.com/ship)にアップしました。 （訳注：初期ユーザー獲得のための有料プレローンチサービス）\n\n本当はもっと早く、コードを書く前に潜在的なユーザーと話をするべきだったんでしょう。 でも自分はこのコンセプトに非常に自信があったんです。Trenndは自分自身の問題を解決するものだったのですから👹\n\n![f:id:o_tomomichi:20191213205855p:plain](https://storage.googleapis.com/blog-notsobad/images/20191213205855.png \"f:id:o_tomomichi:20191213205855p:plain\")\n\n2ヶ月経ってShipから153名の購読者を獲得したものの、Shipに月$80払い続けるよりも明らかにもっと効率のいいやり方があるだろうと感じていました。 でもプロダクトを露出できたことと、ローンチ時にもらえるサポートを考えると、Shipにも価値はあると思います。\n\n5月20日頃には、ようやくプロダクトが人に見せられる状態になってきたと感じていました。\n\nしかし同時に、「Trend List」という名前が「Trendlist.org」のブランドネームであることにも気づいてしまいました。 これは現代グラフィックデザインのサイトで、ドメインオーソリティが38もあり、Googleの検索結果で巨大なプレゼンスを持っています。 サービス名でGoogle検索できるようにするためだけのために、ローンチ初日から彼らと戦う気にはなりませんでした。\n\n![f:id:o_tomomichi:20191213211127p:plain](https://storage.googleapis.com/blog-notsobad/images/20191213211127.png \"f:id:o_tomomichi:20191213211127p:plain\")\n\nもしかしたらちょっと私は臆病すぎで、「Trend List」という名前をかけて彼らと戦うべきだったのかもしれませんが。\n\nとにかく、他の候補としていいものを3つ思いつきました。「Trendful」「Trennd」「Trend Geek」です。 「Nice Trend Bro」という案は妻に却下されました。\n\nそのとき、このリブランドはそれ自体がいいマーケティングの機会になるんじゃないかと気づいたのです。 そこで新しいサービス名についてTwitterで公開投票を行い、ユーザーを巻き込むことにしました。 またこの方法で選ぶことで、確実にみんなが受け入れてくれる名前だと担保することもできます。\n\nTwitter投票は1週間行われるので、この7日間を活用してできるだけ多くの投票を得られるようにしなければいけません。\n\nRedditでのプレローンチ\n--------------\n\n私はすぐに、[Reddit](https://www.reddit.com/)で最初のプレローンチを行うことにしました。 バグや機能面での問題を指摘してくれる初期ユーザーを集めることが主な目的です。\n\nまた私はプロの「ウォントレプレナー（起業したい予備軍）」として、Redditの「r/entrepreneur（起業カテゴリ）」をよく徘徊していました。 そこのビジネス志向なユーザー達なら、きっとTrenndを便利だと思ってくれるはずです。\n\nでもRedditに投稿するとき、私はしっかりガードを上げて行きました。 もし誰かがプロモーションのためにそこに来てると感じたら、みんな一瞬でそいつをぼこぼこにしてツバを吐きかけるということを、嫌というほどよく知っていたのです。\n\nそこでそのとき一番おもしろそうだった57個のトレンドをピックアップして紹介し、投稿するための手土産にしたのです。 最初にバリューを提供し、それからフィードバックを求めるように気をつけました。 1日中コメント欄に張り付き、コメントしてくれた全員に返信しました。\n\n![f:id:o_tomomichi:20191213212147p:plain](https://storage.googleapis.com/blog-notsobad/images/20191213212147.png \"f:id:o_tomomichi:20191213212147p:plain\")\n\nこのReddit投稿へのレスポンスは大きなものでした！ 3つ以上のsubreddits（カテゴリ）で合計500以上のupvotes（いいね）をもらいました。\n\n数字に関して、Redditがもたらしたものは、\n\n*   80人のメール購読\n*   50人のユーザー登録\n*   1,000トラフィック\n\n悪くないスタートです。\n\nそしてまた、このアプリをどうやったらもっと改善できるか、たくさんのフィードバックをもらいました。 たとえば、\n\n*   もっと短い期間でデータ分析できるようにする\n*   Google Topicsだけじゃなくて、キーワードトレンドを可能にする\n*   他にも、閉じるボタンをスマホで押しやすいよう右上に移す、などたくさんの小さな改善案\n\nこのRedditでの成功のあと、Twitterでは新サービス名に対して100以上の投票が集まっていました。 そして「Trendful」と「Trennd」の接戦になっていたのです。\n\nそのとき、たまたまPieter Levelsがこのプロダクトを見つけてコンセプトを気に入り、「Trennd」に投票してくれたのです！\n\n![f:id:o_tomomichi:20191213213024p:plain](https://storage.googleapis.com/blog-notsobad/images/20191213213024.png \"f:id:o_tomomichi:20191213213024p:plain\")\n\n私はPieter Levelsと彼のNomad Listの大ファンです。 ちょうどTrend Listをはじめるほんの数日前に、彼のバリでのプレゼン動画（訳注：冒頭でご紹介した翻訳記事の元動画）を見ていました。 だから彼がこのアイデアを気に入って投票してくれるなんて、本当に驚いたのです。\n\n結局、わずかな差で名前は「Trennd」になりました。 この初期のトラクションに続いて、TrenndはHarry Dryのブログ「[Marketing Examples](https://marketingexamples.com/)」でも取り上げてもらいました。\n\n![f:id:o_tomomichi:20191214110737p:plain](https://storage.googleapis.com/blog-notsobad/images/20191214110737.png \"f:id:o_tomomichi:20191214110737p:plain\")\n\nまた、目標だった[Indie Hackers](https://www.indiehackers.com/)での「Top」入りも果たしました。 Indie Hackersのコミュニティが本当に好きなので、私にとってこれは大変なことです！\n\n![f:id:o_tomomichi:20191214110921p:plain](https://storage.googleapis.com/blog-notsobad/images/20191214110921.png \"f:id:o_tomomichi:20191214110921p:plain\")\n\n最初の5週間が過ぎて、私はこの結果に本当にハッピーでした。 特に目標は決めていませんでしたが、353人のメール購読者数は、目標をはるかに上回っていました。\n\nそしてまた初期のフィードバックが圧倒的にポジティブだったことにも満足していました。\n\nこれまでにも他に小さなプロダクトを作ったことはありましたが、それは上り坂で必死に大きな岩を押していくような感じでした。 新規獲得のための努力をちょっとでもやめるたび、元の場所まで戻ってきてしまいます。 既存のユーザーも離脱して定着しません。\n\nでも今回は、明らかに何かが違うと感じました。今まで作った中で人々が勝手にシェアして広めてくれるのは初めてのことで、プロダクトがひとりでに離陸したような感じでした。\n\nそしてこの数百件のメールリストを活用して、「Trennds for the Weekend」と名付けたメールマガジンを毎週配信するようにしました。 無駄な要素抜きで、シンプルに毎週一番おもしろくてフレッシュなトレンドを集めたメールマガジンを作ることが目標です。\n\n![f:id:o_tomomichi:20191214111843p:plain](https://storage.googleapis.com/blog-notsobad/images/20191214111843.png \"f:id:o_tomomichi:20191214111843p:plain\")\n\nメールマガジンは、私が必ず毎週やると決めたことの1つでした。 購読者と話すネタを作るということが、色々進めるための大きなモチベーションになったのです。\n\nさらに、Trenndsのユーザーと常に会話し、フィードバックのためのオープンなチャネルを持つことはとても価値がありました。 もし私がトレンドの質やデザイン、メールのフォーマットなどで間違った方向に行こうとすると、誰かがメールへの返信で指摘して、正しい方向に戻るよう助けてくれます。\n\n次のステップは[Show Hacker News](https://news.ycombinator.com/show)（訳注：Hacker News内で自分のプロダクトを紹介するコーナー）でのローンチです。 ほとんどのプロダクトはノイズに紛れて沈んでしまうので、大きなチャレンジになるだろうと覚悟していました。\n\nShow Hacker Newsでのローンチ\n----------------------\n\n金曜夜10時、私は日本で机に向かい、Hacker Newsに投稿するためスタンバイしていました。 妻はもうベッドで寝ていましたが、アメリカでもヨーロッパでもみんな起きているこの時間帯が、投稿にはベストだと判断したのです。 また、もし必要なら土曜の朝を使ってコメントに返信したり、状況をチェックすることもできます。\n\n下書きを書き上げ、投稿ボタンを押しました。\n\n> すみません、あなたのアカウントは最近作られたばかりなので、まだ投稿することはできません。\n\nなんてこった！今日はこのことを1日中考えていたのに、投稿することすらできないなんて🤦🏼‍♂️\n\nとにかくHacker Newsにメールして事情を説明すると、親切にもすぐに投稿できるように設定してくれました。 アカウントは2017年に作成していたけど「新しすぎる」と判断されたのは、コミュニティにあまり参加できていなかったということです。\n\n金曜の話に戻します。今度はちゃんと投稿できました。\n\nオーディエンスの共感を呼ぶように、特にタイトルに気をつけました。 他のほとんどの場所でも一緒だと思いますが、Hacker Newsでは「シンプル・明快・謙虚」な投稿が一番うまくいきます。 これは仲間の個人開発者、Vincentが得意なところです。彼がタイトル決めを手伝ってくれ、他にもすばらしいアドバイスをたくさんくれました。 投稿はすぐに「Best of Show HN」ページに移り、その後すぐメインページに載りました。\n\n![f:id:o_tomomichi:20191214112422p:plain](https://storage.googleapis.com/blog-notsobad/images/20191214112422.png \"f:id:o_tomomichi:20191214112422p:plain\")\n\nトラフィックはTrenndの同時接続数で400人まで増え、しばらくの間ランキング1位になりました。\n\n![f:id:o_tomomichi:20191214112449p:plain](https://storage.googleapis.com/blog-notsobad/images/20191214112449.png \"f:id:o_tomomichi:20191214112449p:plain\")\n\nこの時点で、悪名高い「Hacker Newsのハグ」によってTrenndのサイトは死にました。 MongoDB Atlas無料プランのキャパ上限を超えてしまったのです。 サイトが落ちていた15分間、有料プランにアップグレードしながらとても心配な時間を過ごしました。\n\nHacker Newsのゴールデンタイムを15分も逃してしまったのは恥ずかしい限りです。 それ以来、サーバ側でキャッシュしてDBアクセスが急増しない仕組みを実装しています。\n\nしかし幸いすぐに復帰できたので、トップページの上位付近に12時間くらい居続けることができました。 私にとっては十分な成果です。強欲になりすぎてはいけません😛\n\n朝早くにコメント欄の対応をし、有益な意見やものすごい量のポジティブな反応をもらうことができました。\n\nTwitterでのバズ\n-----------\n\nすべて終わって通常運転に戻るかと思い始めた頃、バズの効果がTwitterにも波及しました。 たくさんの人がTwitterでTrenndについてツイートし始めたのです。\n\nありがたいことに、ちょうどTwitterでプレビュー画像がちゃんと表示されるように修正したところでした（ありがとうMichael！） そのおかげでTwitterでTrenndが拡散されるとき、いい感じの画像と説明文が表示されました。\n\nそして極めつけは、MozのRand Fishkinもツイートしてくれたことです！1ヶ月の最高の締めくくりになりました🍒\n\n![f:id:o_tomomichi:20191216123253p:plain](https://storage.googleapis.com/blog-notsobad/images/20191216123253.png \"f:id:o_tomomichi:20191216123253p:plain\")\n\nいいねとリツイートの数はすごかったです。 私はTwitterを初めたばかりなので、このバズで頭がいっぱいになりました！🤯\n\nこのバズのおかげで[Hacker News letter](https://hackernewsletter.com/)と[Kottke.org](https://kottke.org/)にも取り上げてもらい、こちらも多くの流入をもたらしてくれました。\n\n![f:id:o_tomomichi:20191216123635p:plain](https://storage.googleapis.com/blog-notsobad/images/20191216123635.png \"f:id:o_tomomichi:20191216123635p:plain\")\n\nこれら全部の結果として、Eメール購読者数は2000人を超えました。\n\n*   購読者数: 2,163 🎉\n*   訪問者数: 28,353 🕵️‍♀️\n*   PV: 124,026 👀\n\nユーザーがすぐに、自分で興味あるトレンドを追加してくれたことも驚きでした。 新しいトレンドの発見をある程度クラウドソーシングできるだろうと思っていたのですが、その仮説を裏付けるものでした。 Product Huntが新しいプロダクトの追加をクラウドソーシングしたのと同じやり方です。\n\nしかしこれは同時にクオリティコントロールの問題をもたらしました。 たとえば誰かがポルノ系のキーワードをトレンドとして追加すると、実際にそれがトレンドになっていたとしても、やはりこちらで制御する必要があります🤫\n\nこの段階で2000人以上の購読者を得て、プロジェクトの価値は完全に検証できたと感じました。 マーケティングによってさらに数百人を獲得したとしても、この価値について何か変わることはありません。\n\nそこで次はプラットフォームをよりパワフルにする必要があると考え、すぐに動ける準備はしつつ、Product Huntへのローンチは一旦保留することにしました。\n\nマネタイズ（もしくはその失敗）\n---------------\n\nこの時点で、このプロジェクトをどうやってマネタイズするか、長く苦しい試行錯誤を始めました。 プロジェクト自身の費用をある程度まかなえるようにしたかったし、あわよくば生活費の足しになれば最高です。\n\n中長期的には、Trenndのプレミアムバージョンを作るのが進むべき方向性だとはわかっていました。\n\nしかしそれをどんな形にしたらいいのかはわかっておらず、やるからには正しい方法でやりたいと思っていました。 プレミアム版を急ぎすぎたり間違った方法で提供することで、せっかく苦労して築いた信頼を失ってしまうのでは意味がありません。\n\nあるユーザーは、好きなトレンドを集めてパーソナライズされた通知を受け取れる「プライベートTrenndダッシュボード」について問い合わせをくれました。彼らはそのためなら月$100~$200払うとまで言ってきたのです。\n\n後からわかったのですが、彼らはTrenndを使って新しいプログラミング言語を早く見つけられることに非常に価値を感じていました。 そうすればUdemyでそれについてのコースを開講することができます（一番最初にコースを作ってよいレビューを集めると、勝者総取りのマーケットで非常に儲かるのです）\n\nしかし私にとって、一番の価値はトレンドそれ自体とホットなトレンドがすぐわかることであり、特定のものをパーソナルダッシュボードに載せられる機能ではありませんでした。他のユーザーは単に無料バージョンを使うでしょう。 また、プログラミングコースのクリエイターが一体どれだけいるというのでしょうか。 いいか悪いかわかりませんが（よかったと思いたいです）、私はこの提案を却下ました。\n\n代わりに、コミュニティやアフィリエイトスポンサーを探し始め、価格について交渉し始めました。 まだわずか数千のメール購読しかなく、トラフィックという意味では小さなハエにすぎなかったにも関わらずです。\n\n結果的に[Unreadit](https://unreadit.com/)（本当によいプロダクトです、チェックしてみてください！）と、スポンサー掲載のバーター取引を取り付けることができました。 それは非常にうまくハマり、私達双方にとってメリットがありました。\n\nこの交換で、多少のトラフィックと新しい購読者、そして将来Trenndでスポンサー枠を掲載した場合にどれくらいコンバージョンするかの数字が取れました。 しかし、これはあくまでバーター取引だったので、一切収益にはなっていません。\n\n![f:id:o_tomomichi:20191216125258p:plain](https://storage.googleapis.com/blog-notsobad/images/20191216125258.png \"f:id:o_tomomichi:20191216125258p:plain\")\n\nしかしとにかく契約を取り付けたということが、また閉じこもってプロダクト開発に集中する言い訳になりました🦀\n\nコードの洞窟\n------\n\n私には、Trenndをもっと堅牢で長期的に運営できるようにしたいという目標がありました。\n\n最大の難関はずっと変わらず、ノイズとなるトレンドの除去です。 誰も自分に関係あるトレンドを探すために、何ページもクリックし続けたくはありません。 色んな方法や切り口で、自分に関係のあるトレンドを探せるようにする必要があります。\n\n私は日本でマンションの小さな白い部屋にこもって作業していました。\n\n![f:id:o_tomomichi:20191216143201j:plain](https://storage.googleapis.com/blog-notsobad/images/20191216143201.jpg \"f:id:o_tomomichi:20191216143201j:plain\")\n\nこのとき追加したのが、検索ボリュームの絶対数表示や、ソート機能、整理されたカテゴリ分類や、トレンドの自動区分機能などです。\n\nデータ粒度については、最初は3ヶ月のチャートに対してデータが1週間単位だったことがわかります。 3ヶ月で12個のデータしかなく、ちょっと安っぽいですね。\n\n![f:id:o_tomomichi:20191217142940p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217142940.png \"f:id:o_tomomichi:20191217142940p:plain\")\n\nしかし改善後の下のグラフを見てください。 今では日単位でデータが取れるようになって、随分変わったことがわかります。\n\n![f:id:o_tomomichi:20191217143026p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217143026.png \"f:id:o_tomomichi:20191217143026p:plain\")\n\nこの期間に積み上げた小さな改善を列挙しても退屈なので、これくらいにしておきましょう。本題に戻ります😛\n\n何もしていないのにトラクション発生\n-----------------\n\nこの頃、1ヶ月以上マーケティングは何もしていませんでした🤦‍♂️\n\n先月のHacker NewsとTwitter界隈でのバズは、トラフィックとともに自然と落ち着いていました。\n\n一般的に、マーケティングを後回しにして、とにかく作り続けるほうがずっと簡単です。 私も個人的にそっちのほうが快適に感じます。 しかし、マーケティングは開発と並行して継続的に取り組まなければいけないことも、十分すぎるほどわかっていました。\n\n周囲の成功しているIndie Hackerたちは、継続的に価値あるコンテンツをアウトプットできる仕組みを作っています。\n\nしかし驚いたことに、メール購読者の数は放置した状態でもまだ毎日増え続けており、サイトも安定して100~300訪問/日くらい発生するようになっていました。\n\n![f:id:o_tomomichi:20191217143925p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217143925.png \"f:id:o_tomomichi:20191217143925p:plain\")\n\nこれはどちらも私にとって安全を示す青信号でした。 そして突然、Pieter Levelsがまたツイートしてくれたのです！これは最初のときから数カ月後で、また数千人のユーザーをサイトに連れてくることになりました。\n\n![f:id:o_tomomichi:20191217144257p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217144257.png \"f:id:o_tomomichi:20191217144257p:plain\")\n\n買収\n--\n\nいろんな人がプロジェクトに関わらせてくれと売り込んできました。 そしてそれがほぼ定期的に続いていたのです！\n\n問題は、共同創業者を作るのは巨大なリスクを持ち込むということです。 ビジョンや倫理観、その他多くのことに対する意見の相違。\n\nそれはとても大きな不確実性なので、私は一人でやる方を選んでいました。\n\nそう、このメールを受け取るまでは、です。\n\n![f:id:o_tomomichi:20191217173130p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217173130.png \"f:id:o_tomomichi:20191217173130p:plain\")\n\nこの名前には見覚えがありました。Brian Deanの名前をググります。\n\nやっぱり！[Backlinko.com](https://backlinko.com/)のBrian Deanです😮\n\n![f:id:o_tomomichi:20191217173304p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217173304.png \"f:id:o_tomomichi:20191217173304p:plain\")\n\nさらに調べてみます。 興味深いことに、彼は以前にもこうした買収をしていました。どうやら冗談ではなさそうです。\n\n![f:id:o_tomomichi:20191217173425p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217173425.png \"f:id:o_tomomichi:20191217173425p:plain\")\n\n私はちょうど数日後に自分の結婚式を控えていて、4日ほど沖縄に滞在しているところでした。そのためBrianとの電話は少し待たせることになってしまいました。焦らしたわけではないのですが😜\n\n![f:id:o_tomomichi:20191217173445p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217173445.png \"f:id:o_tomomichi:20191217173445p:plain\")\n\nそして1時間21分31秒の電話のあと、売却が決まりました。 私たちはSkypeごしに握手したのです！🤝\n\nさて、売却金額についてですが、もちろんそれが知りたくてここまで読んでくれたんですよね？？\n\nまだ売上の立っていないプロダクトの売却金額を決めるのは本当に難しいことです。 いや、もしかしたらそうじゃないかも。ほとんどの人は単に$0だと考えます。 Trenndもトラフィックは成長していたけど、絶対値で見るとまだまだ低いレベルでした。\n\nしかし同時に、私たちはこのプロダクトのポテンシャルに非常に興奮していたし、初期のトラクションによってコンセプトは部分的に検証され、リスクも低減されていると考えました。\n\n結果的に、私のこの6ヶ月間の稼働をUSベースのエンジニアとして換算した額に、すでに実現したトラクション/サクセスから算出した変数Xを掛けた金額に落ち着きました。\n\nなのでまだリタイアできるほどではありませんが、これは大きな勝利です！\n\n一番大きいのは、いまや毎月の家賃の支払いを心配する必要がなく、もっと大きな将来図を考えることができるということです。\n\nそしてもしかしたらもっと重要なことは、この成功が私（と私の妻！）にとって、「本当の仕事」をやらず自分の「プロジェクト」を続けてもいいという証明になったことです。\n\n正直に言うと、自分はちょっとクレイジーで、この6ヶ月間を無駄にしているのではないかとも思っていました。\n\n日本での私は、雇用もされておらず、家で1日中パソコンと向き合っている変な「フリーター」でした。\n\n![f:id:o_tomomichi:20191217173651p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217173651.png \"f:id:o_tomomichi:20191217173651p:plain\")\n\nこの期間中、途中のプロセスを書き続けていたことがとても助けになったと思います。 個人開発者として正気を保ち、進捗を一歩引いたところからトラックすることができました。\n\nまたできるだけ過程をオープンにして、購読者数のグロースやトラフィック、売上などの数字を共有することは、周囲のサポートを引き寄せる助けにもなったし、ひとりでやっているプロジェクトの信頼性を増すこともできました。\n\nそしてこれらすべてが、プロダクトのまわりにストーリーを作り、興味を持っていなかった人たちを惹きつけることにもなりました。\n\nこれから\n----\n\n今やプロジェクトのバックにBrianがいてくれるというのは、大変ありがたいことです。 これはExploding Topicsにとって素晴らしいニュースでした。 彼はSEO業界で非常に有名であると同時に、非常にスマートで、プロジェクトを次のレベルに引き上げる力になってくれています。\n\n彼は長年の業界での経験に基づき、どちらに進むべきか的確な判断ができます。 彼の言う「頭痛発見器」によって、私よりはるかに早く、潜在的な問題を見つけることができるのです。\n\nまた新しい機能をBrianの巨大な顧客基盤に提供し、彼らの反応を見ることにも取り組みます。\n\nプロダクト・マーケットフィットを目指した改善を続けながら、コミュニティや掲示板をベースに何ヶ月も何年もかけてユーザーの拡大を図る必要は、もうないのです。\n\nその代わりに、よりよいプロダクトを作ることにフォーカスできます。 つまり、よりよいトレンドを早く発見できるという、プロダクトのコアなバリューです。 この観点で、私は再度バックエンドの改善に取り組むことができるようになりました。 新しいトレンドやキーワードの発掘場所として、いまやインターネット上でより多くの場所をモニタリングしています。 ヘルス、ビジネス、マーケティング、ファッションなど、分野も様々です。\n\nまたニッチなカテゴリの深堀りも始めました。これはクリティカルな領域で、私が何ヶ月も先送りにしていたことです。 しかしBrianの助力を得て、前に進めることができるようになりました。\n\n問題は、潜在的なカスタマーのタイプが本当に多様なことです。 私のような個人開発者が次のプロジェクトのアイデアを探していたり、投資家が投資先を探していたり、アフィリエイターが次のホットなプロダクトを探していたり、あるいは単に好奇心からの調べ物だったり。\n\nそんな中で、私たちはまずプロブロガー向けに取り組むことにしました。\n\nこれらのライターたちが新しいターゲットです。彼らは記事のために多様な分野のフレッシュなアイデアを、継続的に必要としています。 そしてもし彼らが急激に伸びているトピックについて最初に記事を書くことができれば、彼らにとってもすばらしい結果をもたらすはずです。\n\n[ConvertKit](https://convertkit.com/)のNathan Barryが$1,000~$10,000のMRR（月次収益）を獲得したことで、このマーケットの価値はすでに検証されています。\n\n> できるだけ小さくてニッチなことに取り組みましょう。一般的なメールマーケティングではなく、「プロブロガーのためのメールマーケティング」に移行したことは、非常に重要でした。([出典](https://www.indiehackers.com/forum/ama-im-nathan-barry-the-founder-of-convertkit-968-000-mo-be0b361a63))\n\nまた私たちはプロダクトの名前も変えました。わかってます、わかってます。すでにTrend ListからTrenndに変えたのに、また変えるのかって言いたいんですよね？ 聞いてください、ちゃんと理由があるんです。このプロダクトは口コミでとても広がっています。\n\nでも友達に教えるときに「Trendって調べてみて。あ、Nは2つだよ。それと.comじゃなくて.coなんだ」だと、イケてないですね😅 だからExploding Topics.comにしました。\n\nかわいいでしょ？覚えやすいし、スペルも簡単。見た目もバランスいい気がするけど、それは私だけかもしれませんね。 そして「topics」というキーワードが、私たちの新しいターゲットによくマッチしているのです。\n\nさらに、デザインもいい感じにリニューアルしました。全体的に前よりも直感的でセクシーだと思っています🤩\n\n![f:id:o_tomomichi:20191217175915p:plain](https://storage.googleapis.com/blog-notsobad/images/20191217175915.png \"f:id:o_tomomichi:20191217175915p:plain\")\n\n以前はちょっとしたプロジェクトのようでしたが、今やちゃんとしたプロダクトに見えます。\n\nそして最終的に今日、Product Huntにも投稿します。 Brianと私が一日中コメントに答えられるようにスタンバイする予定です。 （訳注：元記事の投稿日は2019年12月3日。Exploding Topicsはこのあと見事[Product Huntでも1位を獲得](https://www.producthunt.com/posts/exploding-topics)しました）\n\n私の話は以上です！最後まで読んでくれてありがとう。楽しんでくれたら何よりです。\n\nでは、また会う日まで😘\n\nJosh([@joshahowarth](https://twitter.com/joshahowarth))","date":1577111287000,"image":"https://storage.googleapis.com/blog-notsobad/images/20191213205841.jpg","tag":["翻訳","個人開発論"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"5iIel9YP7MGMEQAjA61Keb","type":"Entry","createdAt":"2020-05-27T09:06:29.226Z","updatedAt":"2020-06-13T03:59:53.190Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"失敗から学ぶ、Webサービスのための悪くないネーミング論","slug":"2019/10/10/174738","excerpt":"![f:id:o_tomomichi:20191010173353j:plain](https://storage.googleapis.com/blog-notsobad/images/20191010173353.jpg \"f:id:o_tomomichi:20191010173353j:plain\") （[布団でぬくぬくのにゃんご画像](https://www.pakutaso.com/20171154312post-13935.html)は本文と一切関係がありません）\n\n* * *\n\nWebサービスのネーミングはなかなか体系的に学んだりする機会もなく、センスに頼るところが大きいものです。\n\nそこで過去の失敗事例からネーミングのアンチパターンを学び、ちょっとしたネーミングの方法論のようなものを整理してみた記事がこちらになります。 例によって意識低めの方法論となっておりますので、あらかじめご了承ください。","content":"![f:id:o_tomomichi:20191010173353j:plain](https://storage.googleapis.com/blog-notsobad/images/20191010173353.jpg \"f:id:o_tomomichi:20191010173353j:plain\") （[布団でぬくぬくのにゃんご画像](https://www.pakutaso.com/20171154312post-13935.html)は本文と一切関係がありません）\n\n* * *\n\nWebサービスのネーミングはなかなか体系的に学んだりする機会もなく、センスに頼るところが大きいものです。\n\nそこで過去の失敗事例からネーミングのアンチパターンを学び、ちょっとしたネーミングの方法論のようなものを整理してみた記事がこちらになります。 例によって意識低めの方法論となっておりますので、あらかじめご了承ください。* * *\n\n### そもそもネーミングってそんなに大事？\n\nすごくそもそもなんですが、ネーミングなんて好きなのでいいじゃんという考えもあります。 これは完全にその通りで、「絶対これ！」という名前を思いついたら、誰に何を言われようがそれを使うのが一番ですよね。\n\nとはいえ実際にはそこまでドンピシャの名前を思いつかず、悩みながらネーミングを考えることも多かったりします。 そんなときにわざわざデメリットのあるネーミングを選ぶ必要はないので、最低限の原則を守ってネーミングで損をしないようにする＝悪くないネーミングを考えてみようというのがこの記事の目的です。\n\n💩【実録】これが損するネーミングだ\n------------------\n\nじゃあネーミングで損するって何だよって話なんですが、ネーミング地雷をいくつも踏み抜いた失敗ネーミングの宝石箱のようなサービスがあるので、これを具体例として見てみましょう。\n\nトーナメント表作成サービス「THE TOURNAMENT」です。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fthe-tournament.jp%2F\" title=\"THE TOURNAMENT | 簡単・便利な無料のトーナメント表作成サービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://the-tournament.jp/\">the-tournament.jp</a></cite>\n\nWeb上で簡単にきれいなトーナメント表が作成できます。 何かの事情でトーナメント戦やるときはぜひお試しください。\n\nというわけで以下、このネーミングで損したところです。\n\n### ❌ググらビリティが低すぎる\n\n一番はやっぱりこれ。ただの一般名詞に「THE」をつけても全然ユニークになりません。 サービス名「THE TOURNAMENT」でググって検索上位に出るまで、相当時間がかかりました（1年くらい？）。\n\nもちろんサービス名検索がメイン流入になることってむしろ珍しいと思うので、気にしないっていう選択肢もあります。 でも意外と人から聞いたとか、前に見たあのサービス何だっけとか、サービス名でググるケースもあったりしますよね。\n\n致命的な影響はなくても取りこぼしは減らしたいし、そもそも自分のサービスが名前でググって出てこないのはとても悲しいです。\n\n### ❌まったく同じ名前の映画があった\n\n一般名詞の壁を越えて検索で出てくるようになっても、今度は完全に同名の映画が立ちはだかってきました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt0471041%2F\" title=\"The Tournament (2009) - IMDb\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://www.imdb.com/title/tt0471041/\">www.imdb.com</a></cite>\n\n同じ名前がすでに使われていないか事前にチェックするのは基本中の基本ですね。とても反省しています。\n\nちなみに気になる映画の内容は\n\n> 世界各国から暗殺者たちが集結し、最後の一人になるまで殺し合う殺人トーナメントで、はからずも参加者となってしまった神父の姿を活写するアクション。\n\nおもしろそうかよ。\n\n### ❌名前にスペースが入ると色々めんどくさい\n\n単語を2つ組み合わせてサービス名にするのはよくある手法ですが、間にスペースやハイフンが入るとユニークな単語として認識されにくくなりがち。\n\nスペースなしで単語をくっつける「合成語」にできたら、この問題は避けれるんじゃないかと思いますよ（後述）。\n\n### ❌長い英単語はむずかしい\n\nトーナメントだとこういう単語なんでしょうがないんですけど、アルファベットの長い単語は思ってる以上に拒否反応があります。 開発者はずっと見てるので読めて当然と思っちゃうんですが、ふつうはサービス名なんてそんなにじっくり見ないので、ぱっと見て読めないと読んでもらえないんですよね。。\n\n後からいざググろうとしてもスペルがわからなかったり間違えたりして、検索で辿り着かない可能性も増えてしまいます。\n\n何よりトーナメントの場合、初期の開発でエラーが出た原因の3割くらいはtournamentのスペルミスでした（恥ずかしい）。\n\n### ❌そもそも英語だと「トーナメント」の意味が違う\n\nどうも違うようです。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.eevocablog.com%2Ftournament%2F\" title=\"#2 「トーナメント」の英語は本当に tournament？\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://www.eevocablog.com/tournament/\">www.eevocablog.com</a></cite>\n\nまぁこのままで海外展開できないほど違うわけではなかったのでよかったですが、こういうことは稀によくあるので最初にちゃんと調べたほうがいいですね。本当に（反省）\n\n* * *\n\n📋「カタカナ2語の合成語」というご提案\n--------------------\n\nというわけで、こういう失敗を何回も繰り返して、その反省から個人的に最近よく使うメソッドが「カタカナ2語の合成語」です。 オーソドックスすぎてわざわざ言うのも恥ずかしいですけど。\n\nたとえば拙作では、「ブンゴウメール」などがこれに該当します。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fbungomail.com%2F\" title=\"ブンゴウメール | 1日3分のメールでムリせず毎月本が読める、忙しいあなたのための読書サポートサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://bungomail.com/\">bungomail.com</a></cite>\n\n*   カタカナネーミングなので、読み方が誰でもわかる\n*   ユニークな単語として認識されやすい\n\nという感じで、前述の失敗はかなり避けやすくなっているんじゃないかと。\n\nこの方法論自体はベーシックなものですが、もちろんこれでかっこいいネーミングだって作れます。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsauna-ikitai.com%2F\" title=\"サウナイキタイ - 日本最大のサウナ検索サイト\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://sauna-ikitai.com/\">sauna-ikitai.com</a></cite>\n\nカタカナネーミングの超かっこいい事例。間違える余地なし！わかりやすい！ もちろん圧倒的にかっこいいデザインも影響してますが、ネーミング単体でもすごくよいですね。\n\nとはいえサービスの雰囲気を考えてどうしてもアルファベット表記にしたいという場合は、\n\n*   長い名前を避ける\n*   カタカナで読み方を併記する\n*   ローマ字読みできない名前を避ける\n\nあたりを抑えておけば、損する機会はかなり減らせるんじゃないかと。\n\n* * *\n\n🏆殿堂入り神ネーミング事例集\n---------------\n\n以上の方法で、少なくとも「損をしない」＝「悪くない」ネーミングになるはず。 しかしこれを守った上でさらにプラスアルファの要素が入ると、神ネーミングが生まれると言われています。\n\n最後にそんなお気に入りの事例を少しだけご紹介。どれもとてもいいネーミングです。 毎回こうしたプラスアルファを使えるわけじゃないですが、チャンスがあれば狙ってみたいですね。\n\n#### ハッカドール\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fhackadoll.com%2F\" title=\"ハッカドール (Hackadoll)\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://hackadoll.com/\">hackadoll.com</a></cite>\n\n残念ながら最近サービス終了してしまいましたが、個人的にWebサービスのネーミング歴代1位に君臨し続ける神ネーミングサービスです。\n\nこういうのをわざわざ解説するのも恥ずかしいですが、「はかどる」をベースに「ハック」と「ドール」と掛けた多重ミーニングがきれいに決まっています。\n\nいやよく考えたら「ハック」はともかく「ドール」って何だよって感じですが、美少女キャラクターをメインビジュアルに置くことで何となく「ドール」のイメージとも合致して完璧なネーミングになっています。語呂も最高。\n\n#### トリオキニ\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ftriokini.com%2F\" title=\"トリオキニ\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://triokini.com/\">triokini.com</a></cite>\n\n「取り置き」＋「お気に」で「トリオキニ」。シンプルベストなネーミングです。 単語を重ねるのはポピュラーな方法ですが、トリオキニのように2文字以上重ねられるとやったぜ感が出ますね（何の？）。\n\nちなみに作者の[さちえさん](https://twitter.com/curry_solodev)の最新作は、「あなたは森で、私はタタラ場で生きるためのWebサービス『モリタタ』」。このネーミングセンス、やはり天才か。。。\n\n[https://twitter.com/curry\\_solodev/status/1108022492377956352](https://twitter.com/curry_solodev/status/1108022492377956352)\n\n#### IMAKITA\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fqhapaq.hatenablog.com%2Fentry%2F2018%2F12%2F09%2F234447\" title=\"長文を３行ぐらいで纏めてくれるエンジン IMAKITAを作ってみました - コンピュータ将棋 Qhapaq\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://qhapaq.hatenablog.com/entry/2018/12/09/234447\">qhapaq.hatenablog.com</a></cite>\n\n最後は「長文を三行くらいでまとめてくれるエンジン『IMAKITA』」です。 読みやすさ・ググラビリティを満たした上で、サービス内容との連想にひねりが効いたグッドネーミング！ 個人的にこういうセンスがすごく好き。\n\nローマ字表記だけど全部母音で終わってるので、日本語話者が読み方で迷いにくいのも地味なポイントです。\n\n* * *\n\nまとめ\n---\n\nという感じで色々書いたけど、ネーミングより大事なことはたくさんあるので、あんまり気にしすぎずにサービス作りをがんばりましょうという感じですね。\n\nそしてこれ以外の神ネーミングをご存知の方はぜひコメントで教えてください。\n\nおしまい。","date":1570697258000,"image":"https://storage.googleapis.com/blog-notsobad/images/20191010173353.jpg","tag":["意識低い","個人開発論","ポエム"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"1PVoLVjmFSht7g5ZznUygJ","type":"Entry","createdAt":"2020-05-27T09:06:30.663Z","updatedAt":"2020-06-13T03:59:59.472Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"独自ドメイン取るべきかどうか問題を判断できる（かもしれない）フローチャートを作りました","slug":"2019/04/09/130141","excerpt":"新しいWebサービスを作るときに、独自ドメイン取るべきかは毎回悩ましいところです。\n\nというわけで、そんなドメインどうするか問題を判断する助けになるかもしれない（たぶんならない）フローチャートを作りました。","content":"新しいWebサービスを作るときに、独自ドメイン取るべきかは毎回悩ましいところです。\n\nというわけで、そんなドメインどうするか問題を判断する助けになるかもしれない（たぶんならない）フローチャートを作りました。* * *\n\n前提\n--\n\n独自ドメインで始めた個人開発サービスの8割は1年後にドメイン切れを起こして死ぬという「個人開発の死の谷」があります。(適当です)\n\nなので個人的に、ほとんどの個人開発はサブドメインで始めるのがいいんじゃないかなーと思ってる派です。 この辺の話は以前に別の記事でも書きました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F07%2F30%2F110000\" title=\"作ったWebサービスが誰からも使われなくてさみしい問題を解決する（しない）意識低い方法論 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/07/30/110000\">blog.notsobad.jp</a></cite>\n\nそんな人間が書いているので、かなりサブドメインを優遇したフローになっております。ご了承ください。\n\nというわけでフローチャートはこちらです\n-------------------\n\n![f:id:o_tomomichi:20190403121252p:plain](https://storage.googleapis.com/blog-notsobad/images/20190403121252.png \"f:id:o_tomomichi:20190403121252p:plain\")\n\n何か事情があるなら「独自ドメイン」OR「サブディレクトリ」、そうじゃないなら「サブドメイン」にしようね、という意志を感じるチャートになっております。\n\n以下、各項目を簡単に見てみましょう。\n\n* * *\n\n### 3年は絶対に運営を続ける\n\nまずそもそも論として、ずっと長く続けるサービスなら最初から独自ドメインではじめたほうがいいことが多いわけです。 ドメインの評価もちゃんと蓄積するし、メディアなどに古いドメインへのリンクが残るようなこともないし。\n\nというわけで、本気でしばらく注力する意気込みがあるなら、そりゃ独自ドメイン取りましょうよと。\n\nただ人の気持ちは移ろいやすいので、このサービスで天下取るぞと意気込んで独自ドメイン取っても、1年後には全然違う未来が待っていることも多いですよね（実話）。 全然誰も使っていないサービスに毎年ドメイン更新料を払い続けるのは、なかなか辛いものです。\n\nなので、個人的にサービス開始時のテンションはあんまり信用していません。\n\nたとえドメイン代払うと赤字でも、ライフワークとして取り組むくらいの意気込みがあるなら、独自ドメイン取りましょう。 でもそうじゃないなら、とりあえずサブドメインから始める選択肢もいいかもしれません（布教活動）。\n\n### サービス名が絶対に変わらない\n\nサービス名どんぴしゃで独自ドメインを取ってしまうと、サービス名を変えたくなったときに困ります。 名前変更に強いというのはサブドメインの地味な効用です。 （もちろん変えないにこしたことはないんですが。。）\n\nたとえば自分は最近、青空文庫の作品を検索できるサービスを作りました（もちろんサブドメイン）。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsearch.bungomail.com%2F\" title=\"ゾラサーチ by ブンゴウメール | 青空文庫の作品を読了時間で検索できるサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://search.bungomail.com/\">search.bungomail.com</a></cite>\n\n語呂が気に入って「ゾラサーチ」という名前にしたんですが、「アオゾラサーチ」の方がわかりやすくていいかなーとか結構悩んだわけです。\n\nこのサービスではたぶん名前を変えることはないと思いますが、もしこれが「zorasearch.com」とかで独自ドメインを取っていたら、後から「アオゾラサーチ」に変えるとドメインと齟齬が起きてちょっとモニョります（個人の見解です）。\n\nしかしこれがサブドメイン「search.bungomail.com」だとどうでしょう。サービス名が「ゾラサーチ」だろうが「アオゾラサーチ」だろうが、ドメイン的には何も問題ありません。 （そもそもサブドメインがダサいと言われてしまうと身も蓋もないけど。。）\n\nいやいやそんな名前変えないでしょって気もするけど、サービス名しっくり来ない問題は意外とありまして。 自分もリリース後に名前を変えたいと思ったことは何回もあるし、独自ドメインなのが一因になって断念したこともあります（[THE TIMELINE](https://the-timeline.jp)、お前だよ！）\n\nまぁ名前変更はドメイン以外にも制約がありますが、少なくとも最初から制約を増やす必要はないので、しっくり来てないならとりあえずサブドメインから始めるのもよいですよ、と。\n\nこの場合、サービス名そのままじゃなくてちょっと抽象的な単語でサブドメインにするのがおすすめです。 「zorasearch.bungomail.com」だと結局サービス名変えられないからね。。\n\n### ドメイン芸がしたい\n\nサービスの名前や概念をきれいに表現できる独自ドメインを見つけてしまったとき。 いくらお金がかかろうが、SEO的に怒られようが、ドメイン芸人は目の前のチャンスを無視することができません（言い過ぎました）。\n\nドメイン芸がきれいに決まっているケースとしては、たとえばこういうやつですね。どっちもいいドメイン…！\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.fumu.in%2F\" title=\"踏む.韻 fumu.in\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://www.fumu.in/\">www.fumu.in</a></cite>\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fhyou.show%2F\" title=\"ウェブ表彰 | 気軽に誰かを称賛しよう\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://hyou.show/\">hyou.show</a></cite>\n\nドメイン芸が狙えるのであれば、他の条件は無視せざるをえません。 独自ドメイン取りましょう。\n\n### アドセンスを貼りたい\n\n地味なんだけど意外とひっかかるところ。 アドセンスのルールが変わって、サイトごとに審査が必要になりましたね。 そして以下の記事にもある通り、ほぼ独自ドメインが必須なようです。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.iscle.com%2Fweb-it%2Fg-drive%2Fadsense%2Fsite-level-tsuika.html\" title=\"ほぼ独自ドメイン必須！アドセンス「サイトを追加」の手順と注意点\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://www.iscle.com/web-it/g-drive/adsense/site-level-tsuika.html\">www.iscle.com</a></cite>\n\nアドセンス収益がビジネスモデルに組み込まれているなら、残念ながらあまり選択の余地はありません。 最初から独自ドメインを取りましょう。\n\n### ミニサイトでドメイン強化したい\n\n最後にちょっとイレギュラーなケース。「サブディレクトリ」で新サービスを展開するパターンです。 こちらの記事が非常に参考になります。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fnote.mu%2Fcatnose%2Fn%2Fn0246ada32871\" title=\"サルワカという個人メディアを250万PV/月にまで育てた方法｜CatNose｜note\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://note.mu/catnose/n/n0246ada32871\">note.mu</a></cite>\n\nメインサイトに対するミニサイト・ミニツールという位置づけで、サブディレクトリで別サービスを提供する方法ですね。\n\nメインサイトのSEOを強化できることが大きなメリットですが、各サービスが色々と密結合になりやすそうなのが弱点かなーと思います（あんまりやったことないので知らんけど）。 サイトの構造的に許容できるケースであれば、ぜひ検討してみたいところです。\n\n* * *\n\nまとめ\n---\n\nまぁ色々書きましたが、99%のユーザーはドメインなんて気にしないので、好きなもの使うのが一番ですよね（あれ）。 とはいえドメイン切れの悲劇は少しでも減ってほしいので、サブドメイン教の人が増えてくれれば幸いです。\n\nおしまい。","date":1554782501000,"image":"https://storage.googleapis.com/blog-notsobad/images/20190403121252.png","tag":["細かすぎて伝わらない","意識低い","個人開発論"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"3JX8iElb953Y4GSDxoocTZ","type":"Entry","createdAt":"2020-05-27T09:06:32.657Z","updatedAt":"2020-06-13T04:00:05.859Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"特商法ページのURL設計についてそろそろ本気出して考えてみる","slug":"2019/02/23/154546","excerpt":"![f:id:o_tomomichi:20190223162753j:plain](https://storage.googleapis.com/blog-notsobad/images/20190223162753.jpg \"f:id:o_tomomichi:20190223162753j:plain\")\n\n猫の日に1日遅れたし画像は本文と一切関係ありません。\n\nインターネット上で何かしらの販売を行う場合、「特定商取引法に基づく表記」ページを用意することがほぼ必須となります。 なので大人しく用意するわけですが、このページのURLをどうしたものか毎回悩むわけです。\n\nというわけで100個くらいのサイトを参考にして、一般的な傾向を調べてみました。 結論としては「好きにしたらいい」なのですが、気になる方は以下ご参考くださいませ。","content":"![f:id:o_tomomichi:20190223162753j:plain](https://storage.googleapis.com/blog-notsobad/images/20190223162753.jpg \"f:id:o_tomomichi:20190223162753j:plain\")\n\n猫の日に1日遅れたし画像は本文と一切関係ありません。\n\nインターネット上で何かしらの販売を行う場合、「特定商取引法に基づく表記」ページを用意することがほぼ必須となります。 なので大人しく用意するわけですが、このページのURLをどうしたものか毎回悩むわけです。\n\nというわけで100個くらいのサイトを参考にして、一般的な傾向を調べてみました。 結論としては「好きにしたらいい」なのですが、気になる方は以下ご参考くださいませ。* * *\n\n前提\n--\n\n### なんで特商法のURLで悩むのか\n\n似たところだと「利用規約」と「プライバシーポリシー」のページがあります。 しかしこっちは何となく英語で「terms」とか「terms-of-use」、あるいは「kiyaku」とかで済ませられる感じ。\n\nところが特商法の場合、ばちっと1語で対応する英語がないし、日本語をそのまま書き下そうにも長くなりがち。 というところで悩むことが多い気がします。え、そんなことないですか？\n\n### 調査対象\n\n「特定商取引法に基づく表記」でググって出てきた特商法ページを上から100個くらい調べました（ヒマなのか）。 検索上位なのでそれなりに大きいサイトが多くなったけど、もちろん網羅してるわけでもないし偏りもあると思います。\n\nとはいえさすがに大体の傾向は掴めたかなーと思うので、もし物足りない方はここで拾えてないようなおもしろいURLを見つけたり、出現頻度の定量的な分析とかやってみるとよいのではないかと思います。知らんけど。\n\n* * *\n\n結果発表\n----\n\nもったいつけるほどの内容もないのでさくさく行きますよー。\n\n### 【1】一番人気はやっぱり「tokushoho」\n\nというわけで調べた限り一番よく見るのは、やはり「tokushoho」系の表記でした。ですよねー。\n\n表記\n\n例\n\nURL\n\ntokushoho\n\nYahoo!\n\n[https://topics.shopping.yahoo.co.jp/info/tokushoho](https://topics.shopping.yahoo.co.jp/info/tokushoho)\n\nこのパターンは「特定商取引法」という概念をきちんと表現できて、かつ表記も短くて済むので、やはり王道感があります。 しかし安心するのはまだ早くて（何が？）、このタイプは表記ゆれが尋常じゃないです。\n\n##### 表記ゆれ地獄\n\n日本語のローマ字表記なのでしょうがないですよね。。\n\n表記\n\n例\n\nURL\n\ntokushoho\n\nYahoo!\n\n[https://topics.shopping.yahoo.co.jp/info/tokushoho](https://topics.shopping.yahoo.co.jp/info/tokushoho)\n\ntokusyouhou\n\nバンダイナムコ\n\n[https://www.bandainamcoid.com/info/tokusyouhou](https://www.bandainamcoid.com/info/tokusyouhou)\n\ntokushohou\n\nソフトバンク\n\n[https://cdn.softbank.jp/ybb/set/data/terms/pdf/tokushohou.pdf](https://cdn.softbank.jp/ybb/set/data/terms/pdf/tokushohou.pdf)\n\nこういう問題があるから、URLに日本語（ローマ字）入れたくない派がいるのも理解できます。\n\n##### 独自アレンジ\n\nあと、言いたいことは一緒なんだけど違うところで切り取るパターンもあります。\n\n表記\n\n例\n\nURL\n\ntokuteisho\n\nびゅうトラベル\n\n[http://www.v-travels.co.jp/joho/tokuteisho/](http://www.v-travels.co.jp/joho/tokuteisho/)\n\ntorihikihou\n\nSHIPS\n\n[https://www.shipsltd.co.jp/pages/shopping\\_webshop\\_torihikihou.aspx](https://www.shipsltd.co.jp/pages/shopping_webshop_torihikihou.aspx)\n\ntokutei\n\nはてな\n\n[https://hatenacorp.jp/tokutei](https://hatenacorp.jp/tokutei)\n\n「tokutei」は厳密に言うと説明不足な感じもするけど、シンプルなので使われるケースが多いイメージ。\n\n* * *\n\n### 【2】英語1語もシンプルでいいよね\n\nというわけで日本語略称の次に多かったのは、英語1語で表現するやつ。 これはざっくり2パターンにわけられそうです。\n\n##### 法律系のやつ\n\n表記\n\n例\n\nURL\n\nlaw\n\nスターバックス\n\n[https://www.starbucks.co.jp/onlinestore/policy/law.html](https://www.starbucks.co.jp/onlinestore/policy/law.html)\n\ntradelaw\n\n東洋経済新報社\n\n[https://corp.toyokeizai.net/tradelaw/](https://corp.toyokeizai.net/tradelaw/)\n\nregulation\n\nBBT\n\n[https://www.bbt757.com/regulation.html](https://www.bbt757.com/regulation.html)\n\n##### 取引系のやつ\n\n表記\n\n例\n\nURL\n\ncommerce\n\nSONY\n\n[https://www.sony.jp/store/agreement/info/commerce.html](https://www.sony.jp/store/agreement/info/commerce.html)\n\ndealing(s)\n\n宣伝会議\n\n[https://www.sendenkaigi.com/dealings/](https://www.sendenkaigi.com/dealings/)\n\ntransactions\n\nRemix Point\n\n[https://www.remixpoint.co.jp/transactions.html](https://www.remixpoint.co.jp/transactions.html)\n\nどうでもいいけど「low」になってるページも意外と多かったですね。 自分も気をつけよう。。\n\n* * *\n\n### 【3】どんなに長くなろうとも英語で表現しきる\n\nあと意外に多かったのが、ちゃんと意味の通る英語を表現しきるパターン。\n\n表記\n\n例\n\nURL\n\nterms-of-sale\n\nMIT Technology Review\n\n[https://www.technologyreview.jp/about/terms-of-sale/](https://www.technologyreview.jp/about/terms-of-sale/)\n\ncommercial\\_transactions\n\n三菱東京UFJ\n\n[https://www.murc.jp/commercial\\_transactions/](https://www.murc.jp/commercial_transactions/)\n\nspecifiedcommercialtransactionslaw\n\nダイソン\n\n[https://www.dyson.co.jp/support/specifiedcommercialtransactionslaw.aspx](https://www.dyson.co.jp/support/specifiedcommercialtransactionslaw.aspx)\n\nart-into-information-required-by-specified-commercial-transactions-dhs\n\nDell\n\n[https://www.dell.com/learn/jp/ja/jpcorp1/solutions/art-into-information-required-by-specified-commercial-transactions-dhs](https://www.dell.com/learn/jp/ja/jpcorp1/solutions/art-into-information-required-by-specified-commercial-transactions-dhs)\n\n下に行くほどだんだんやばくなってきてます。 ダイソンもやべーと思ったけど、Dellはもっとやばかった。 区切りなしダイソンの破壊力もなかなかですけどね。\n\n* * *\n\n### 【4】独自のワーディング\n\n最後に、少数派ですが独自で略称を用意してるケース。\n\n表記\n\n例\n\nURL\n\nsctl\n\nCrowdWorks\n\n[https://crowdworks.jp/pages/sctl.html](https://crowdworks.jp/pages/sctl.html)\n\nebizrule\n\nLINE\n\n[https://terms.line.me/line\\_common\\_ebizrule](https://terms.line.me/line_common_ebizrule)\n\nCrowdWorksさんの方は、たぶん「Specified Commercial Transaction Law」の略なのかな。 LINEの方は最初URL見てもわからなかったけど、「E-Biz Rule」ってことなんでしょうね。\n\n簡潔な表記でちゃんと意味も表現できるのがメリットですが、初見ではわからないことが多そうです。 だから何だって話なんですが。。\n\n* * *\n\nまとめ\n---\n\nというわけで色々調べた結果、自分がURL設計で気にするポイントが2つあったことに気づきました。\n\n*   そのページの内容を過不足なく適切に表現している\n*   シンプルでわかりやすい\n\n特商法の場合、この2つを両立させるのが難しいからこんなに悩んでしまうわけですね。\n\n【2】の英語1語はわかりやすいけどページ内容を表現するところで妥協していることが多くて、【3】の全部載せだとシンプルさを犠牲にしていることが多い。\n\n結果的に【1】とか【4】みたいに略語を使うことで両立を図るケースが多くなるわけですね。\n\nとはいえURL設計を気にするのはほぼ同業者だけなので、まぁ自分が気持ちいいと思う設計にしたらいいですよね（この記事の意味ェ。。）\n\nそんなことよりちゃんとユーザーに買ってもらえるようなサービス設計をがんばろうと思いましたよと。\n\nおしまい。","date":1550904346000,"image":"https://storage.googleapis.com/blog-notsobad/images/20190223162753.jpg","tag":["細かすぎて伝わらない","意識低い","個人開発論"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"2oIk42QktBUI98yXHTtaB3","type":"Entry","createdAt":"2020-05-27T09:06:33.384Z","updatedAt":"2020-10-24T08:52:39.135Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"個人開発者の欲求5段階説","slug":"2019/01/08/143839","excerpt":"以前に「[死なないWebサービスの作り方](https://blog.notsobad.jp/entry/2018/07/30/110000)」みたいな記事を書いたところ、ありがたいことに最近は個人開発の相談をいただいたりすることも出てきました。（おそれ多い！）\n\nしかしすごく当たり前の話なんですが、個人開発者と言ってもステージはいろいろだし、そもそも目指すところが違ってたりもします。その前提によってアドバイスする内容も全然変わってくるなと。\n\n自分が個人開発でいま何を目指していて、そのために何をするとよさそうなのか。 その辺りの会話の叩き台として、ざっくり整理してみようというのがこの記事の目的です。\n\n半分以上タイトルを言いたかっただけなので、軽い気持ちで見てもらえたら幸いです。","content":"以前に「[死なないWebサービスの作り方](https://blog.notsobad.jp/entry/2018/07/30/110000)」みたいな記事を書いたところ、ありがたいことに最近は個人開発の相談をいただいたりすることも出てきました。（おそれ多い！）\n\nしかしすごく当たり前の話なんですが、個人開発者と言ってもステージはいろいろだし、そもそも目指すところが違ってたりもします。その前提によってアドバイスする内容も全然変わってくるなと。\n\n自分が個人開発でいま何を目指していて、そのために何をするとよさそうなのか。 その辺りの会話の叩き台として、ざっくり整理してみようというのがこの記事の目的です。\n\n半分以上タイトルを言いたかっただけなので、軽い気持ちで見てもらえたら幸いです。\n\n* * *\n\n## 前提と言い訳\n\n##### みんな大好きマズローさん\n\nみんな大好きマズローさんの欲求5段階説。あらゆるところで引用されまくってるのでもはや説明は不要ですね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fjibun-compass.com%2Fmaslow\" title=\"マズローの欲求5段階説をこの上なく丁寧に解説する。あなたの欲求はどのレベル？ | 自分コンパス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://jibun-compass.com/maslow\">jibun-compass.com</a></cite>\n\n今回はWebサービス個人開発者の欲求を、マズローさんになぞらえて5段階で考えてみました。\n\n##### 完璧なピラミッドなんてものは存在しない\n\nでここが超重要な前提なんですが、そもそも本家のマズロー理論だって当然完全なものではありません。 必ずあの順番で欲求が移っていくわけでもないし、各層の決め方だって（言ってしまえば）恣意的で検証できるものではありません。\n\nそれでもこの仮説が多くの人にとって納得感を持ち、議論の叩き台になるからこそ、このピラミッド画像を今でもあちこちで目にするわけですね。\n\nこの個人開発版ピラミッドも、もちろん反例や異論はいくらでも出ると思います。 思うのですが、まぁ確かに傾向としてはこういうルートを辿る人も多いよねー、くらいの気持ちで見てもらえるとよいのではないかと。\n\nそれでもどうしても納得できない、こっちの方が正しいぞという仮説があれば、ぜひあなただけの新しいピラミッドを作ってみてください（謎）。\n\n* * *\n\n## 個人開発者の欲求5段階ピラミッド\n\n言い訳も終わったところで、本題の欲求ピラミッド個人開発者verです。\n\n![欲求５段階ピラミッド](https://storage.googleapis.com/blog-notsobad/images/20190108142507.png)\n\nはい、こんな感じになりました。\n\n何度でも言いますが、すごくおおまかな傾向として、こういう流れを経て個人開発に求めるものが変わっていく人が多いんじゃないかなーという仮説です。そうじゃない人もたくさんいることはご了承ください（しつこい）。\n\n以下それぞれの内容と、各ステージで何をするとよさそうか、ざっくり見ていきたいと思います。\n\nプログラミングの勉強を始めたばかりの新人エンジニアたかし君（仮）が、徐々に個人開発沼に沈んでいく様子を想像しながらお読みください。\n\n* * *\n\n## 【1】開発欲求：とにかく何か作りたい\n\n##### ケーススタディ\n\n独学でRailsチュートリアルを勉強したあと、自分でも何かWebサービスを作ってみようと週末にこつこつ個人開発を始めたたかし君。\n\nあわよくば作ったのがバズって人気にならないかなーとか密かに思っているものの、実際はとにかく目の前の開発に必死で、またそれが楽しくてしょうがない時期です。\n\nというわけで、これが一番ベースにある「開発欲求」。自分で動くものを作りたい、というWebエンジニアの原動力ですね。\n\n##### この時期にやるとよいこと\n\n個人開発道においては、この最初のサービスを作りきれず脱落してしまう人が一番多いと言われています（要出典）。 なのでまずはとにかく1つ作り切ることが、たぶんすごく大事です。\n\nこの論点については以下の記事がものすごく参考になるはずなので、ぜひ見てみてください。 <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.nabettu.com%2Fentry%2Fsingle-develop\" title=\"個人開発のモチベーションが続かない、作り終わらない。原因と対策を考えてみた。 - フロントエンドの地獄\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.nabettu.com/entry/single-develop\">blog.nabettu.com</a></cite>\n\nメンテナンス性とか、ユーザビリティとか、スケールした時の心配とか、一切何にも気にしなくていいので、とにかく作って公開しよう。 きっと誰も使わないから大丈夫です😇\n\n* * *\n\n## 【2】利用欲求：人に使ってもらいたい、バズりたい\n\n##### ケーススタディ\n\n思ったより[ガウディった](https://blog.nabettu.com/entry/single-develop)けど、無事に初めてのサービスをリリースできたたかし君。 その後も2つ、3つと順調にサービスを作りました。やったね。\n\nでも悲しいことに、すべてのサービスが日の目を見ることなく消えていきます。 最初はただ作ってるだけで楽しかったのに、だんだん誰からも使われないサービスを作り続けるのが辛くなってきました。\n\nおめでとうございます！「利用欲求」、別名「バズ欲求」の時期に差し掛かったようです。 そりゃせっかく作ったんだから誰かに使ってもらいたいし、ほめられたいですよね。\n\n##### （補足）バズ欲求は現代人の業\n\nこのバズ欲求は現代人の業のようなものなので、しょうがないところではあります。 なんですが、個人的にはあんまりこの欲求にとらわれない方がいいのかなーという気もしています。\n\n作ったサービスがバズると強烈に気持ちいいし、ユーザーも増えるのでそりゃうれしいです。 でもバズってもマネタイズには関係ないことも多いし、バズって増えたユーザーは本来価値を提供するべき層とズレていたりってこともよくありますよね。\n\n##### この時期にやるとよいこと\n\nというわけで、この時期に本当に目指すべきは、（自分を含めて）ユーザーがちゃんと価値を感じて使ってくれるサービスを作ること、かなと思っています。\n\nといってもユーザーヒアリングをしろというわけではなく、ちゃんと自分が使いたいサービスを作れれば、一定数は同じニーズのユーザーに刺さるはずです（個人開発ではこれが一番おすすめ）。\n\n前の「開発欲求」の段階ではとにかく作ることが優先で、まだうまく作れない部分も多かったはず。 そのせいで自分も使わないようなサービスになっていたかもしれません。\n\nなので次のステップとなるこのステージでは、ちゃんと自分が使いたいと思えるものを作ること。 その結果として他のユーザーにも使ってもらえるという経験をすることが大事なんじゃないかと。\n\nそのために何をしたらいいかというと、やはりいっぱい作る is 正義（ゴリラ脳）。\n\n技術的にも徐々に思い通りに作れるようになるし、ユーザーからの反応にもちょっとずつ手応えが出てくるはず（出るまで作り続けよう）。\n\n一番苦しい時期かもしれませんが、楽しんでがんばるうほ🦍\n\n* * *\n\n## 【3】継続欲求：継続して使ってもらいたい\n\n##### ケーススタディ\n\n誰も使わないサービスをいくつか作ったあと、ついに初めてのプチバズを体験したたかし君。ここまで苦労した分、うれしさもひとしおです。\n\nしかしサイトに来てくれたユーザーはみんな1回で飽きてしまったらしく、しばらくするとまた誰も来ない状態になってしまいました。。\n\n一瞬で消費されるサービスじゃなくて、もっと長く使われるサービスを作ろうと決意したたかし君。 というわけで、次は「継続欲求」です。\n\n##### この時期にやるとよいこと\n\nこの問題を意識低く解決する「死なないWebサービスの作り方」について、以前に以下の記事で整理してみましたので詳しくはそちらをご覧ください。 （もちろん実力のある人はもっと正攻法で攻めてください）\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F07%2F30%2F110000\" title=\"作ったWebサービスが誰からも使われなくてさみしい問題を解決する（しない）意識低い方法論 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/07/30/110000\">blog.notsobad.jp</a></cite>\n\nしかし記事にも書いてますが、これはあくまでサービスの即死を避けて成功率を上げるための方法論であり、これをやったから絶対成功するなんてものではありません。\n\n各サービスの生存率を上げたうえで、いっぱい作って「これは！」と思えるサービスに出会えるまでがんばりましょう。\n\n結局どのステージでも同じこと言ってる気がしてきたうほ。。🦍\n\n* * *\n\n## 【4】収益欲求：サービスから収益を上げたい\n\n##### ケーススタディ\n\n段々サービス開発にもこなれてきて、主力サービスの運営がついに1年を超えたたかし君。 もちろんニッチなジャンルではありますが、一定の層には刺さってずっと使われており、検索で継続的な新規流入も確保できています。\n\nこの時期になると、自分のサービスで食べていけるようになりたいという願望を、そろそろ真剣に考えてもいいんじゃないかという気がしてきました（会社もやめたいし）。\n\nしかしまだ売上といえば、お小遣い程度の広告収入のみ。何とかサービスの収益化を考えなくてはいけません。 というわけで次が「収益欲求」です。\n\n##### （補足）ごめんここから先はわからない\n\n冒頭でもお断りしておりますが、この記事の著者自身がまだ自社サービスだけで食べていこうとチャレンジしてる途中であり、偉そうなことは何も言えない立場ですw\n\n食べていくには足りないけど多少の売上は上げれるようになってきたので、その範囲でわかること、いま試行錯誤していることの範疇から書いていることをご了承ください。\n\n##### この時期にやるとよいこと\n\nという感じでいまわたし自身が痛感しているのは、ここまでの方法論で作ったサービスを後づけで収益化するのはけっこう難しいなと。\n\n始めからマネタイズのポイントまで含めて設計して、明確に収益化を見据えてドメインの選定・サービスの設計をしないと、食べていけるレベルの売上に到達するのは難しそうです（めまいがするくらい当たり前のことしか言ってないw）。\n\nというわけでオススメなのは、個人開発でちゃんと収益化まで達成している先人を探してお手本にすること。 とりあえずサービスを作ってから独自のマネタイズ方法を生み出すのは相当難易度が高いので、ちゃんと収益化できている事例を学び、そこから逆算でお金の匂いのするサービスを企画するとよいのではないかと。\n\n以前にまとめた記事があるので、よければ参考にしてこのスーパーな人たちをフォローしてみてください（丸投げ）。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F01%2F18%2F180837\" title=\"個人でWebサービスを作って収益化を目指す人が、ウォッチしておくと勉強になる人たちのリスト - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/01/18/180837\">blog.notsobad.jp</a></cite>\n\n* * *\n\n## 【5】自己実現欲求：サービスを通して社会貢献したい\n\n##### ケーススタディ\n\n法人向けのプランが売れ始め、念願の収益化を達成したたかし君。 初めて自分のサービスでお金を頂いたときの感激は忘れられません。\n\nしかし、ある日ふと疑問がよぎります。 「仮にこのまま順調に伸びたとして、おれは一生このサービスを育てて生きていくんだろうか。。」\n\n残念ながら答えはノーでした。たしかに自分もニーズを感じたから始めたサービスで、ユーザーも評価してくれています。 でもそれは、自分が人生を賭けるほどの情熱を持てることではありませんでした。\n\nただ使われる、お金になるというだけじゃなくて、自分が本当に情熱を持てるサービスで勝負したい。 というわけで最後のステージは、マズローさんと同じ「自己実現欲求」です。\n\nWebサービス開発も、突き詰めれば人生そのものと同じなんだ…！（謎）\n\n##### この時期にやるとよいこと\n\nここまで来たらもう一般論っぽいアドバイスなんてないですよね。 たのしい人生を送ってたのしいサービスを作りましょう。🦍\n\nひとつだけ挙げるとすると、同じように志を持ってサービス開発している仲間が周りにいると、刺激をもらえてよいかもしれません。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fscrapbox.io%2Fadmin-guild-pr%2F%25E9%2581%258B%25E5%2596%25B6%25E8%2580%2585%25E3%2582%25AE%25E3%2583%25AB%25E3%2583%2589\" title=\"運営者ギルド - 運営者ギルド外部向けScrapbox\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://scrapbox.io/admin-guild-pr/%E9%81%8B%E5%96%B6%E8%80%85%E3%82%AE%E3%83%AB%E3%83%89\">scrapbox.io</a></cite>\n\nピラミッドを登りきったような猛者たちがうようよいて、ほとばしる知見を惜しみなく共有してくれる夢のようなSlackグループです。 個人開発やっている人はぜひ参加してみてください。\n\n* * *\n\n## 【エピローグ】たかし君の挑戦は続く\n\nというわけで、薄々気づかれていたでしょうがこのたかし君（仮）は、ほとんどわたし自身の話でした。\n\n紆余曲折を死ぬほど経たあと、いまは昔からやりたかった読書系のサービスを運営しています。 青空文庫の小説を分割して、毎日ちょっとずつメールで送ってくれるサービスです。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fbungomail.notsobad.jp%2F\" title=\"ブンゴウメール | 1日3分のメールでムリせず毎月本が読める、忙しいあなたのための読書サポートサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://bungomail.notsobad.jp/\">bungomail.notsobad.jp</a></cite>\n\nありがたいことに多くのユーザーに登録いただき、なかなかの継続率で利用いただいています。 今年こそ読書するぞって年始の目標にした方とか、ぜひ利用してみてください🐸\n\n現在は機能追加した有料版を絶賛開発中で、マネタイズの挑戦はまだまだこれからというところ。 しかし自分でもかなり気に入っているサービスなので、たのしんで開発を続けていきたいと思います。\n\nオレはようやく登り始めたばかりだからな。このはてしなく遠い個人開発坂をよ…！（完）\n\n* * *\n\n## まとめ\n\n長いうえにツッコみどころが多い内容でしたが、最後までお読みいただきありがとうございます。\n\n個人開発者と話すのは大好きなので、こんなわたしでよければWebサービスの相談も大歓迎です！[Twitter](https://twitter.com/kame_f_no7)もやってますのでお気軽にどうぞ。\n\nまたDIYで自作したオフィスをサービス開発の勉強会とかにも開放する予定なので、興味ある人はぜひ遊びに来てくださーい。（初回はもう満席だ…）\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fshincyokudoudesuka.connpass.com%2Fevent%2F114522%2F\" title=\"3monthsService（個人サービス開発の進捗報告＋もくもく会） (2019/01/14 14:00〜)\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://shincyokudoudesuka.connpass.com/event/114522/\">shincyokudoudesuka.connpass.com</a></cite>\n\n今年もいっぱいWebサービス作りましょう！ おしまい。","date":1546925919000,"image":"https://storage.googleapis.com/blog-notsobad/images/20190108142507.png","tag":["言いたいだけ","意識低い","個人開発論","ポエム"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"3H8aR0rsRg1ceNBK5gCu88","type":"Entry","createdAt":"2020-05-27T09:06:35.765Z","updatedAt":"2020-06-13T04:00:15.618Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"2011年の個人開発を支えた技術","slug":"2018/12/04/070000","excerpt":"この記事は、「[個人開発サービスに用いられている技術 Advent Calendar 2018](https://crieit.net/advent-calendars/2018/technology)」4日目の記事です。\n\n![f:id:o_tomomichi:20181119185903p:plain](https://storage.googleapis.com/blog-notsobad/images/20181119185903.png \"f:id:o_tomomichi:20181119185903p:plain\")\n\n2011年（なんともう7年前！）に、初めての個人開発で「booklovesmusic（ブック・ラブズ・ミュージック）」というサービスを作りました。\n\n個人的に思い入れが強くサービスが死んでからもドメインを維持してたのですが、さすがにキリがないので今年で更新をやめることにしました。 色々整理してると当時の状況を思い出して懐かしくなったので、供養の意味も込めて2011年当時の個人開発環境を振り返ってみようと思います。\n\nこれから開発しようという方には何の参考にもなりませんが、ちょっとでも懐かしい気持ちになってもらえれば本望です。","content":"この記事は、「[個人開発サービスに用いられている技術 Advent Calendar 2018](https://crieit.net/advent-calendars/2018/technology)」4日目の記事です。\n\n![f:id:o_tomomichi:20181119185903p:plain](https://storage.googleapis.com/blog-notsobad/images/20181119185903.png \"f:id:o_tomomichi:20181119185903p:plain\")\n\n2011年（なんともう7年前！）に、初めての個人開発で「booklovesmusic（ブック・ラブズ・ミュージック）」というサービスを作りました。\n\n個人的に思い入れが強くサービスが死んでからもドメインを維持してたのですが、さすがにキリがないので今年で更新をやめることにしました。 色々整理してると当時の状況を思い出して懐かしくなったので、供養の意味も込めて2011年当時の個人開発環境を振り返ってみようと思います。\n\nこれから開発しようという方には何の参考にもなりませんが、ちょっとでも懐かしい気持ちになってもらえれば本望です。※当時新人エンジニアだった自分の開発環境なので、当たり前ですがこれが当時のスタンダードというわけではありません。またここで挙げてる技術や環境がレガシーというつもりもまったくありませんので誤解なさいませんように。。\n\n* * *\n\nその前にサービスを追悼する\n-------------\n\n### 🤔どんなサービスだったの？\n\nbooklovesmusicは、読書にぴったりの音楽をおすすめしてくれるサービス、というコンセプトでした。\n\n具体的には、好きな本を選ぶとその本に紐付いたYoutubeのプレイリストが表示されるので、それを聴きながら読書を楽しむことができます。\n\n本とプレイリストの紐付けは完全にユーザー投稿型です。 サイト上で好きなYoutubeの動画（音楽）をいくつか選ぶとAPI経由でYoutubeのプレリストを作成し、そのプレイリストと本を紐付ける、という仕様になっていました（がんばってるな。。）\n\n### ☠️一瞬のアクセスと、死\n\nリリース後にいくつかメディアでも取り上げていただき、ありがたいことにデビュー作にしてはそれなりのアクセスがありました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.lifehacker.jp%2F2012%2F05%2F120507booklovesmusic.html\" title=\"読書にぴったりの音楽をおすすめし合うサービス｢booklovesmusic｣\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://www.lifehacker.jp/2012/05/120507booklovesmusic.html\">www.lifehacker.jp</a></cite>\n\nしかし、当たり前ですがほとんどのユーザーは投稿じゃなくて閲覧しかしなくて、いくら本を検索しても紐づくプレイリストが存在しないという状態でした（そりゃそうですね）。\n\n結局リリースから半年くらいは追加開発しながら運用を続けて、最後は誰にも使われなくなってフェードアウト、、という感じでこのサービスは一生を終えました。南無。\n\nいま振り返ると反省点ばっかりですが、[最初から期待値を下げて開発する](https://blog.notsobad.jp/entry/2018/07/30/110000)のが定番になった最近の自分からすると、当時の勢いみたいなのがうらやましかったりもします。\n\n* * *\n\n当時の開発状況\n-------\n\nというわけでこのbooklovesmusicを開発していた2011年当時の環境を、できるだけ思い出して書いてみようと思います。 不正確な記述もあるかと思いますがご容赦ください。\n\n### 🛠言語/フレームワーク\n\nbooklovesmusicはPHPで開発していて、フレームワークとしてCakePHPを使っていました。まだ1系だったのかな。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fcakephp.org%2Fjp\" title=\"CakePHP - Build fast, grow solid | PHPフレームワーク\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://cakephp.org/jp\">cakephp.org</a></cite>\n\nこのちょっと前にプログラミング覚えたいと思って未経験の求人を探してたのですが、当時Web界隈ではほとんどPHPの求人ばっかりだったと思います。で自分も無事に新人エンジニアとしてPHPから入門しました。\n\n仕事では確か[Zend](https://framework.zend.com/)ベースの独自フレームワークを使ってて、モダンな環境を知りたい！と思ってRailsインスパイアなCakePHPを使ってみたはず。\n\nControllerとかModelとか大量に作られるフォルダの意味が全然わからず、最初はかなり絶望したのがいい思い出です。。 この経験のおかげで後にRailsさわったときのハードルが多少下がった気がするので、まったく無駄というわけではなかった、と思いたい。\n\n### 💻ローカル環境\n\nマシンは買ったばかりのMacBookPro（Mid2010）を使っていました。 [メモリを増設](https://blog.notsobad.jp/entry/54791577771)したり[SSDに換装](https://blog.notsobad.jp/entry/82691328054)したりして、けっこう最近まで使ってた愛用マシンです。\n\nローカルサーバーは象のアイコンでおなじみの[MAMP](https://www.mamp.info/en/)を使ってましたね。便利だったよMAMP 🐘\n\nエディタは確か[miエディタ](https://www.mimikaki.net/)（旧名ミミカキエディット）を使ってたはず。\n\nその頃会社のマシンはWindowsで、[Eclipse](https://www.eclipse.org/)が推奨されてたけどどうしても好きになれず、途中からはもっぱら[サクラエディタ](https://sakura-editor.github.io/)を愛用してました。WindowsではXampp使ってましたね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsakura-editor.github.io%2F\" title=\"Sakura Editor\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://sakura-editor.github.io/\">sakura-editor.github.io</a></cite>\n\n### ⚙インフラ\n\nインフラはレンタルサーバーで、ロリポップの当時の最安プラン（月200円くらい？）を使っていました。 仕事の研修で使ってたので、同じ環境に揃えたんですね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Flolipop.jp%2F\" title=\"ロリポップ！レンタルサーバー\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://lolipop.jp/\">lolipop.jp</a></cite>\n\nAWSとかもまだそこまで一般的じゃなくて、個人開発だとレンタルサーバーは割と一般的な選択肢だったような気がします。知らんけど。\n\nちなみにメディアで取り上げてもらったときはアクセスが集中して一瞬でサーバーが落ちたのですが、なんとこのときはまだ「サーバーが落ちる」という概念を知らなかったです（すごい）。\n\nロジックが間違ってないのに動かないのはおかしい！と思っているうちに波が去って、よくわからないうちに復帰してました。 わからないことがあったら詳しい人にちゃんと聞こう（大事）。\n\n### 📦デプロイ\n\n男は黙ってFTP、です。 毎回プロジェクトフォルダ全体を、レンタルサーバーのディレクトリにFTPで上書きアップしていました。\n\n後述するようにバージョン管理はまだ導入してなかったので、いま思うとよく無事にプロジェクトを維持してたなーという印象。 しかし実際何とかなってたので、まぁがんばれば何とかなるんだなという知見を得ました。\n\nFTPのクライアントソフトは黄色いアヒルの[Cyberduck](https://cyberduck.io/)を使ってました。\n\n### 🔗バージョン管理\n\nもちろんまだ導入していませんでした。 当時は世間的にもまだgitが今ほど普及してなくて、[Subversion](https://subversion.apache.org/)（SVN）の方が主流だったような。\n\nとぼけた亀がマスコットの[TortoiseSVN](https://tortoisesvn.net/)を仕事では使ってたので、バージョン管理の概念自体は知ってたはず。 まぁ趣味開発だしそこまで必要性を感じなかったんですかね。。なかなか男らしい決断です。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ftortoisesvn.net%2F\" title=\"Home · TortoiseSVN\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://tortoisesvn.net/\">tortoisesvn.net</a></cite>\n\nバージョン管理がない上に当初はステージング環境もなかったので、デプロイして動かなかったときは悲惨です。 これはどう対応してたかというと、定期的にプロジェクトフォルダ全部コピーしてバックアップ取ってたような記憶があります。 本当によく管理できてたな。。\n\nでもいま振り返ると、余計な学習コストを増やさなかったのはいい判断だった可能性もワンチャンあるんじゃないかと🐶 すべてが初めてだったので、全部まともにやってたらとても完成しなかったはず。。\n\n### 🤖ステージング環境\n\nというわけで、何回か本番デプロイして動かない！という経験をしたあとに、ステージング環境を作るということを学びましたw\n\nレンタルサーバーでステージング用にディレクトリをもう1個切って、本番アップする前にそっちにアップするようにしたんですね。 これで随分デプロイに安心感が出たような気がします。\n\nしかし一部本番とパスが違って動かないところがあって、特定の処理はステージング用に書き換えたりしてたような記憶が。 本番とステージングのソースに乖離が出てたので、ステージングでは動いたのに本番では動かなかったり。ステージングとは。。\n\n### 🎨デザイン/CSS\n\n最後はデザインまわりの話。 この頃からデザインも完全にひとりでやっていて、覚えたてのPhotoshopで画面イメージ作ったりしてました（もう使い方わすれた。。）\n\n##### CSSフレームワーク\n\nCSSもフレームワークは使ってなくて、完全に手探りでフルスクラッチです。 ちょうどこの頃にBootstrapが登場して話題になり始めてたような気がするけど、このときはまだ使ってませんでした。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fgetbootstrap.com%2F\" title=\"Bootstrap\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://getbootstrap.com/\">getbootstrap.com</a></cite>\n\n次のプロダクトで使ってみて、あまりの便利さに衝撃を受けたのを今でも覚えてます。 最近はずっと[Semantic UI](https://semantic-ui.com/)がお気に入りです。\n\n##### レスポンシブ対応\n\n当時はまだまだガラケーも残ってたけど、スマホも普及期に入ってたはず。（仕事でガラケーの公式サイトも大量に作ってたな。。）\n\n仕事ではPCとスマホで完全にviewを分けることが多かったけど、ぼちぼちレスポンシブデザインなんてことも言われ始めてた気がします。\n\nが、booklovesmusicは完全にPCオンリー。スマホ対応を後回しにして、その「後」が永遠に来なかったパターンですね。 あるある。\n\n仕事ではもちろんスマホ対応もしてたのですが、この頃はまだ全体的にPCファーストで作って、それをスマホ対応するっていう空気感だったような気がします。今では完全に逆のことが多いですね。\n\n##### アイコンとか\n\nあと個人的に今と大きく違うのは、ちょっとしたアイコンとかもこの頃は全部Photoshopで自作してました。えらい。まぁ他に選択肢を知らなかったんですが。。 今だと良くも悪くもfontawesomeとかで済ましちゃってますね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ffontawesome.com%2F\" title=\"Font Awesome 5\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://fontawesome.com/\">fontawesome.com</a></cite>\n\n自作のアイコンが全部微妙にいびつで歪んでるのが、いま見ると非常にほほえましいw\n\n* * *\n\n### まとめ\n\nという感じで、いま振り返っても何で作りきれたのか不思議なくらい、初めて尽くしの開発でした。しかし楽しかった…！\n\nさすがに7年もやってると当時よりは技術も上がって（そしてそれ以上に環境がよくなって）作りたいものを思い通りにつくれるようになってきました。 でも一方で、中途半端に技術と知識がついてリリースまでの動きが遅くなってるのも年々感じます。\n\nバージョン管理もしてないのにライブラリの中身を手動で書き換えて強引に動かしていたあの頃の情熱を思い出して、来年は個人開発ももっとバリバリやっていきたい所存です。  \nまぁそのライブラリのバージョンが上がった瞬間に追従できなくて死んだので、やっぱり最低限の知識はあった方がいいと思いますけど😇\n\n* * *\n\nちなみに、booklovesmusicはこれでサービス終了しますが、もしコンセプトに共感してリメイクしたいという方がいたらぜひ[@kame\\_f\\_no7](https://twitter.com/kame_f_no7)まで連絡もらえるとうれしいです。\n\nそこまで好きなら自分で作れよって感じなんですが、残念ながらぼくは本読むときに音楽聞かないんですよね（なんで作ったw）\n\n[個人開発はドッグフーディングが一番](https://blog.notsobad.jp/entry/2017/12/05/101957)なので、ぜひ本と音楽が好きな方に引き継いでもらえるとうれしいです。\n\nおしまい。","date":1543874400000,"image":"https://storage.googleapis.com/blog-notsobad/images/20181119185903.png","tag":["技術系","ポエム","個人開発論"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"Ffuxka0Sfa7xi3jNnc4VY","type":"Entry","createdAt":"2020-05-27T09:06:37.414Z","updatedAt":"2020-07-26T06:05:06.627Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":7,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"作ったWebサービスが誰からも使われなくてさみしい問題を解決する（しない）意識低い方法論","slug":"2018/07/30/110000","excerpt":"![f:id:o_tomomichi:20180728192324g:plain](https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif \"f:id:o_tomomichi:20180728192324g:plain\")  \n[http://jigokuno.com/eid\\_69.html](http://jigokuno.com/eid_69.html)\n\n個人開発でWebサービスを作ったものの、全然ユーザーが集まらなくて自然消滅、、というのはよくある話です。 おそらく個人開発者の一番の悩みは「作ったものが誰からも使われない」でしょう（当社調べ）。\n\nこの記事では、この問題に対するおそろしく意識の低い方法論を整理してみたいと思います。\n\nめっちゃバズらせる・ヒットさせる方法論ではなく、あくまでバズらないWebサービスでもさびしく孤独死するのを避けたい…という後ろ向きなハックですのであらかじめご了承ください。","content":"![f:id:o_tomomichi:20180728192324g:plain](https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif \"f:id:o_tomomichi:20180728192324g:plain\")  \n[http://jigokuno.com/eid\\_69.html](http://jigokuno.com/eid_69.html)\n\n個人開発でWebサービスを作ったものの、全然ユーザーが集まらなくて自然消滅、、というのはよくある話です。 おそらく個人開発者の一番の悩みは「作ったものが誰からも使われない」でしょう（当社調べ）。\n\nこの記事では、この問題に対するおそろしく意識の低い方法論を整理してみたいと思います。\n\nめっちゃバズらせる・ヒットさせる方法論ではなく、あくまでバズらないWebサービスでもさびしく孤独死するのを避けたい…という後ろ向きなハックですのであらかじめご了承ください。\n\n---\n\n## 目次\n \n \n#### そもそも、なんでWebサービスは死ぬのか\n\n*   Webサービスの死因\n*   よくある個人開発サービスの一生\n*   「バズか死か」の二元論を避ける\n\n#### 死なないサービスを作る（意識低い）方法論\n\n*   【1】CGMじゃなくてツール型にする\n*   【2】できるだけ何も作らない\n*   【3】絶対に赤字にはしない\n\n#### 注意と言い訳\n\n*   死なないだけだと、ただのゾンビ👻\n*   最後は確率論なので、いっぱい作ろう😇\n\n#### まとめ\n\n---\n\nそもそも、なんでWebサービスは死ぬのか\n--------------------\n\nいきなり哲学的な見出しになったけど、もちろん中身は意識低い話です。\n\n### Webサービスの死因\n\n完全に私見ですが、「サービスの死」とは以下３つの状態を指します（断言）。\n\n###### 【死因①】ノーコンテンツ\n\nコンテンツがメインの価値になるサイトで、コンテンツが圧倒的に少ない OR あっても全然更新されてないなどで、有用なコンテンツがない（あるように見えない）。\n\n###### 【死因②】動かないシステム\n\nシステムのエラーなどで、本来の機能を利用できない状態が放置されている。 （Twitterログインが機能していない、など）\n\n###### 【死因③】サイトの消滅\n\nドメインが切れてて、そもそもサイトにアクセスできない。サーバを解約して、もう何も動いていない。\n\n狭義には③が完全な死ですが、①と②みたいなサイト見たときも、実質死んでるって判断しますよね。\n\n\n### よくある個人開発サービスの一生\n\n上記の死因を踏まえて、個人開発でよくあるWebサービスの一生は、こんな感じでしょうか。\n\n*   サービスリリースしたけど全然使われず、がんばって自分で投稿したりする\n*   がんばって宣伝したりするけどやっぱり使われず、自分でも投稿しなくなり放置されだす（①ノーコンテンツ）\n*   ライブラリや連携外部サービスのアップデートに追従しなくなり、サービスが動かなくなる（②動かないシステム）\n*   ドメイン代がもったいなくて、更新をやめる（③サイトの消滅）\n\n＿人人 人人＿  \n＞ 突然の死 ＜  \n￣Y^Y^Y^Y￣\n\n身に覚えがありすぎて、書いてて動悸が激しくなってきた。。\n\n恥を承知でさらすと、わたしのサービスもこんなのばっかりです。\n\n##### ☠失敗例☠ book loves music（ブック・ラブズ・ミュージック）\n\n読書にぴったりの音楽をおすすめし合うサービス。2011年くらいに作ったデビュー作です。\nユーザーが本に合う音楽をセレクトすると、Youtubeのプレイリストとして再生できるというサービスでした。\n\nサイトコンセプトが受けたのか、リリース直後には複数のメディアに掲載されるなどプチバズを経験。\nしかし99％のユーザーは投稿されてるコンテンツをざっと見るだけで、誰もコンテンツを投稿したりはしてくれませんでした。\n\nコンテンツがスカスカなので一度来てくれた方もそのまま離脱して戻らず、ますますサイトは過疎化の一途。\n結局半年ほどは自分で投稿したりして運用を続けたものの、力尽きてそのまま死を迎えました。\nあるある過ぎて泣けてきますね。。\n\n### 「バズか死か」の二元論を避ける\n\nここまでWebサービスの死因とよくあるライフサイクルを整理してみました。 このパターンで一番問題なのは、モチベーションが続く間に軌道に乗らないと、ほぼ間違いなく死んでしまうということです。\n\n誰も使わない状態を自分ひとりで支えてるので、モチベーションが尽きると更新も止まり、そのまま上記の死をすべて経験することになってしまうのですね。。 もちろんそれまでにサービスがバズって軌道に乗ればいいのですが、そうならないことも多い。\n\nそしてどんなにテンション高くはじめても、モチベーションはいつか絶対に落ちます（断言）。 波があるのは当然なので、モチベーションが下がってもサービスが死なない設計・運用にしたい。\n\nサービスリリースすると、ついつい「バズか死か」みたいな二元論で考えちゃうことが多いんですけど。 そうじゃなくて、死ににくい設計で長期運用を可能にし、モチベーションの波と付き合いながらのんびりサービスを育てていく。 そんな方法を考えてみるのが、この記事の目的です。\n\n* * *\n\n死なないサービスを作る（意識低い）方法論\n--------------------\n\nというわけで死なないサービスを作る方法ですが、大きな死因が3つあったので、これを順番につぶしていけば必然的に死亡率を下げることができますね。さっそく見ていきましょう。\n\n### 【1】CGMじゃなくてツール型にする\n\nまず一番大きいのがこれです。 死因①の「ノーコンテンツ」はCGMだから起きる問題なので、CGMをやめるだけで大きな死因を１つ減らすことができます。\n\n#### CGMはむずかしい\n\nここで「CGM（Consumer Generated Media）」とは\n\n> ユーザーの投稿コンテンツがサイトの中心的な価値となるようなサービス\n\nのことを指します。 例は多すぎて不要かと思いますが、TwitterとかCookpadなんかが有名どころですかね。\n\nCGMはコンテンツが集まると圧倒的な価値が出るのですが、最初のコンテンツ集めが難しかったりします。 コンテンツがないから人が集まらず、人が集まらないからコンテンツも増えないという「ニワトリ🐔・タマゴ🐣」問題ですね。\n\n※もちろんCGMをうまく回す方法論もあるわけですが、それができる人はそもそもこんな記事読まないでしょうし、ここではあくまで意識低い方法を考えます。\n\n#### ツール型にしたらいいじゃない\n\nというわけで意識低い解決策としておすすめなのが、「ツール型」のサービスにすることです。 ここでツール型とは\n\n> 他のユーザーが誰も使っていなくても価値を提供できるサービス\n\nと定義してみます。\n\n##### 💡具体例💡 [THE TOURNAMENT（ザ・トーナメント）](https://the-tournament.jp)\n\nWeb上で簡単にきれいなトーナメント表が作れるという超絶地味なサービスです。\n4年前にリリースしてから一度もバズったことはないですが、検索で着々と利用者数を増やし、現在では有料の法人利用も増えてきています（感謝）。\n\nこのトーナメントは典型的なツール型で、最初の2年くらいはごく少数の方に細々使われる程度でした。\nしかし誰も使っていなくてもサイトの有用性に影響はないため、時間をかけてゆっくり検索流入が増えるのを待つことができました。\n\nCGMだと寂れるとますます寂れるという負のループが働いてしまうわけですが、ツール型はその心配がありません。\nまたサイトが育つまでほぼ放置していただけなので、その間は他のサービスの開発に時間を使うことができました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fthe-tournament.jp%2F\" title=\"THE TOURNAMENT | 簡単・便利な無料のトーナメント表作成サービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://the-tournament.jp/\">the-tournament.jp</a></cite>\n\n\n#### SNS連携型もあるよ\n\nまた純粋なツール型とはちょっと違うタイプとして、質問箱からブームが続く「SNS連携型サービス」もあります。 これも他のユーザーがいなくても価値を提供できるタイプのサービスですね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fhyou.show%2F\" title=\"ウェブ表彰 | 気軽に誰かを称賛しよう\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://hyou.show/\">hyou.show</a></cite>\n\n最近大流行したウェブ表彰。やさしいインターネットを作る世界観がとても好きです。\n\nこのタイプのサービスについては、質問箱を開発したせせりさんのこんな記事もあります。 <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.sesere.net%2Fentry%2F2017%2F10%2F30%2F105325\" title=\"【最高のサービスは診断メーカー】資金力も知名度も無い初心者のwebサービス運営者が現実的にユーザーを獲得できるサービスの設計方法 - 考えすぎてしまう人のブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.sesere.net/entry/2017/10/30/105325\">blog.sesere.net</a></cite>\n\nこちらでも同じように「ひとりから使えること」の重要性を指摘されてますね。 このSNS連携型だと、作ったコンテンツが拡散力を持ちやすいという点で、純粋なツール型より爆発力があります。\n\n#### （補足）ツール型の弱点\n\nとりあえずCGMをやめることで「ノーコンテンツ」による即死は避けれるわけですが、ツール型にも弱点があります。\n\nまず純粋なツール型は、集客が弱くなりがちです。 トーナメント作成サービスとか見てもらうとわかりますが、バズる要素はまったくないですねw\n\n基本的にツール型は検索流入を地道に拾うのがメインになります。 時間がかかるし爆発力もないですが、検索流入を取れればその後は安定したアクセスを期待できます。\n\nまたSNS連携型の方は拡散力がすごいのですが、初速で火がつくまで至らなかったときや、いったんブームが落ち着いて誰も使わなくなったときに、再度盛り返すのが難しいんじゃないかなーという気がしてます（作ったことないから知らんけど）。\n\nマシュマロさんくらい常時使われる状態になれば、永遠にバズって新規開拓を繰り返せそうですが。。 <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fmarshmallow-qa.com%2F\" title=\"マシュマロ\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://marshmallow-qa.com/\">marshmallow-qa.com</a></cite>\n\nトーナメントは検索以外にも工夫した結果、多いときで月間150万PVくらいまで伸びてきました。 ツール型をどうやって成長させるかは、長くなるのでまたそのうち改めて整理できたらいいなと。 （いまも試行錯誤中ですが。。）\n\n* * *\n\n### 【2】できるだけ何も作らない\n\n2つ目の死因は「動かないシステム」でした。\n\n放置したシステムが動かなくなる危険性は、定期的にやってきます。 Twitterログインの仕様が変わる、使っている言語やフレームワークのバージョンがサポートされなくなる、など。。\n\n生きているサービスはこれらの波を乗り越えて寿命を延ばし続けるわけですが、どこかで開発者がこの対応を諦めると、そこでシステムとして死ぬことになります。\n\n#### めんどくささ vs モチベーション\n\nこの対応あきらめるかどうかの判断をとても頭が悪い式で整理すると、\n\n> 対応あきらめるとき　=>　モチベーション　＜　対応のめんどくささ\n\nとなります。式にする必要あった？\n\nユーザーにすごく使われてる、売上が上がってるとかだと、問題が起きてもちゃんと対応しますよね。 そうじゃなくてもサービスつくった直後で気合が入ってるときなら、むざむざシステムの致命的なバグを放置しないと思います。\n\n問題はリリースからしばらく経ったのにサービスが伸びてなくて、それでもメンテナンスに工数を取られるという状態です。 2年前に作って誰にも使われず放置してるサービスでRailsのメジャーバージョンアップしなきゃってなったら、やりたくないですよね。 （それなら最初から新バージョンで新しいサービス作りたいw）\n\n#### 作らなければ壊れない\n\nこの問題を完全に防ぐのは難しいのですが、ある程度対策することはできます。\n\nまず前提として、モチベーションに期待するのはやめて、工数＝めんどくささを減らす方向で考えます。 障害はいつ来るかわからないのに、何年もモチベーション保ち続けるとかはだいぶしんどいです。\n\nじゃあどうやって致命的な問題の発生頻度を減らすかっていうと、一番いいのは「極力何も作らない」こと。意識低い。。\n\n##### 💡具体例💡 ブンゴウメール\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fbungomail.com%2F\" title=\"ブンゴウメール | 1日3分のメールでムリせず毎月本が読める、忙しいあなたのための読書サポートサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://bungomail.com/\">bungomail.com</a></cite>\n\n青空文庫の名作小説を1ヶ月で読み切れるように小分けして、毎日少しずつメールで配信してくれるサービスです。\nありがたいことにリリース後にTwitterで大きな反響をいただき、メディアなどにも多数取り上げていただきました。\n\n作ってるときはちゃんと使われる自信なんて全然なかったのですが、自分がほしいサービスだったので、仮に流行らなくても長く使い続けられるよう極限までシンプルな作りにしています。\nその結果、リリース時はフレームワークなど何も使わない、わずか150行のRubyスクリプトになりました。\nローカルで実行すると、指定した作品を分割して1ヶ月分予約配信するというだけの超ミニマムプロダクトです。\n\nここまで小さいと滅多に不具合も出ないし、仮に何かあってもすぐに直せます。\nいわゆるMVP（Minimal Variable Product）という考え方ですが、MVPの状態で長期運用できるように設計しておくと、芽が出るまで放置して育てることができますね。\n\n* * *\n\n### 【3】絶対に赤字にはしない\n\n3つ目の死因は「サイトの消滅」でした。 これはドメイン切れやサーバの契約解除など、どちらもお金の問題が関わってきます。\n\nいまは小規模な個人サービスで大きな赤字が出ることはないと思いますが、たとえ小さくても赤字の状態だと、どこかで支払うのをやめちゃう恐れがあります（経験あり）。\n\nというわけでこれに対する対応はシンプルで、「絶対に赤字にしない」ことです。\n\n#### サブドメインからはじめる\n\nびっくりするくらい小さい話ですが、大事なところです。 これによってドメイン切れによる死を事実上なくすことができます。\n\nドメイン死で一番多いパターンは、ドメイン取得してサービス作って、全然使われなかったので1年後の更新をせずにそのまま終了、というやつですよね（何回もやった）。\n\nサービスをサブドメインで始めることで、この悲劇は簡単に避けることができます。 自動更新してずっと使う主要ドメインを持って、新規サービスはそのサブドメインを使えばいいですね。\n\n最初にかっこいいドメインを取ってテンションを上げる「ドメイン駆動型」開発も好きですが、長生きさせたいならサブドメインから始めてもいいんじゃないかなと思いますよ。\n\n順調に育ってきたら、あとから独自ドメインにしたらいいですからね（逆はむずかしい）。\n\n##### 💡具体例💡 スマホde百人一首\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fkarta.notsobad.jp%2F\" title=\"スマホde百人一首\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://karta.notsobad.jp/\">karta.notsobad.jp</a></cite>\n\nみんなのスマホを百人一首の取り札にして遊べるサービスです。お正月にでもぜひどうぞ🎍\n\n独自ドメイン取ってたら絶対更新してなかったであろうこんな一発ネタサイトも、サブドメインにしてるおかげでいまだに動いています。（自己紹介でのウケはいいです）\n\n作ってから4年以上放置してるし今後も改修の予定はありませんが、少なくともドメイン切れの心配はありません。\n毎年ドメインを更新するかどうかで悩むことがないのはとても快適ですね。\n\n#### サーバももちろん無料で\n\nこちらも大事。 月数百円程度のサーバ代でも、数年前に作ってまったく使われてないサービスのためだけに払ってたりすると、そのうち解約したくなる日が来たりします。\n\nわたしはHerokuやFirebaseを使うことが多いですが、他にも無料プランで使えるサービスも多いと思うので、ぜひ無料で始めましょう。 無料プランでも工夫すればけっこうな規模まで対応できます。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F04%2F170844\" title=\"Herokuの無料プランで月間100万PVをさばく（さばかない）話 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/02/04/170844\">blog.notsobad.jp</a></cite>\n\nとはいえいまはFirebaseが尋常じゃなく便利なのでおすすめですよ。みんなFirebase使おう！\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F03%2F31%2F132507\" title=\"3年間運用してきたWebサービスを「Rails x Heroku」から「Riot.js x Firebase」に移行した話 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/03/31/132507\">blog.notsobad.jp</a></cite>\n\n\n##### 💡具体例💡 ゾラサーチ\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsearch.bungomail.com%2F\" title=\"ブンゴウサーチ by ブンゴウメール | 青空文庫の作品を読了時間で検索できるサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://search.bungomail.com/\">search.bungomail.com</a></cite>\n\n青空文庫の作品を目安の読了時間で検索できるサービスです。前述のブンゴウメールの姉妹サービスとして作りました。\n\nブンゴウメールは超ミニマムプロダクトとしてリリースしたのですが、ありがたいことにユーザー数と機能要望も増えたため、その後Railsアプリとしてリニューアルしていました。\nその過程で青空文庫データが大量に蓄積されたので、それを活用しつつまたもや自分がほしかったサービスを作った感じです。\n\nしかし極力管理の手間は増やしたくなかったので、このゾラサーチはブンゴウメールのRailsアプリにControllerを1つ追加することで実現しています。なんという省エネ。。\n\nサーバももちろん相乗りする形になっているので、追加の費用はかかっていません。\nゾラサーチは売上のないサービスですが、この設計なら赤字にはならないので、サービスを閉じるか悩む必要がありませんね。\n\n---\n\n注意と言い訳\n------\n\n\n### 死なないだけだと、ただのゾンビ👻\n\nというわけで、3つの死因を（ある程度）避ける方法を見てきました。 でもこれだけだと、確かに死んではいないけど、成功してるわけでもありません。\n\n死因のところにも書きましたが、この記事で本当に目指したかったことは、リリースしてすぐに「バズか死か」の二択になってしまう状況を避け、長期的にサービスを成長させる体制を作ることでした。\n\n死なないだけだとただのゾンビです。 目前の死を先送りにできたら、改めてサービスを成長させる方法を考えてみましょう（丸投げ）。\n\n### 最後は確率論なので、いっぱい作ろう😇\n\nまた、サービスを延命させることで成長させるチャンスを増やせますが、 どんなに延命しても伸びないサービスは伸びません（かなしい）。\n\nこれについてはもう散々言われてるように、いっぱい作るしかないと思います。 とはいえスクラップ＆ビルドの繰り返しだと「バズか死か」に逆戻りなので、「ビルド＆ゾンビ」で長寿サービスをいくつも作って、じっくり芽が出るように育てるといいんじゃないですかね。\n\n前述の「ブンゴウメール」はありがたいことにかなり反響をいただいたのですが、実はこれ、2年前に一度リリースしたときは鳴かず飛ばずだったのです。。\n\n前とはコンセプトを変えたとか、文豪系ゲームが増えて意外な反響があったとか、、、色んな要因があるんでしょうが、要は「わからん」と。\n\n最後は確率論なので、あきらめずにいっぱい作りましょう（自戒も込めて）。\n\n* * *\n\nまとめ\n---\n\n思うところがありすぎて、ずいぶん長い記事になってしまいました。。 最後までお付き合いありがとうございます。\n\nまぁ好みが分かれるところではあると思うのですが、こんなやり方もあるよということで誰かの参考になればうれしいです。\n\nおしまい。","date":1532916000000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif","tag":["意識低い","個人開発論","ポエム"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"3mmzVCUR3m6VkOu9qUUamt","type":"Entry","createdAt":"2020-05-27T09:06:47.000Z","updatedAt":"2020-06-13T04:00:54.243Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"個人開発のWebサービスにとりあえず導入しておきたい無料の便利サービスまとめ","slug":"2018/03/10/223400","excerpt":"個人開発はリソースが限られるので、いかにサービスのコアなところに集中するかが勝負です。\n\nとはいえサービスのクオリティを上げるためには、色々コア以外の部分も充実させたいところ。 そんなときに簡単に使えて便利なサービスを集めてみました。\n\n自分が運営しているサービスで実際に導入して、本当によかったものだけの選り抜きリストです。 どれも無料プランでの利用が可能なので、ぜひ試してみて下さい。","content":"個人開発はリソースが限られるので、いかにサービスのコアなところに集中するかが勝負です。\n\nとはいえサービスのクオリティを上げるためには、色々コア以外の部分も充実させたいところ。 そんなときに簡単に使えて便利なサービスを集めてみました。\n\n自分が運営しているサービスで実際に導入して、本当によかったものだけの選り抜きリストです。 どれも無料プランでの利用が可能なので、ぜひ試してみて下さい。* * *\n\nチャットサポート / Small Chat\n=====================\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsmall.chat%2F\" title=\"Smallchat\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://small.chat/\">small.chat</a></cite>\n\n個人開発こそユーザーサポートはがんばりどころ。\n\nユーザーの生の要望や不満を聞けるので、問い合わせ対応は本当に学びが多いです。\n\nGoogleフォームやメールでの問い合わせ窓口も用意していたのですが、チャットだとカジュアルに質問できるので、明らかに拾える意見が多くなりました。\n\n類似サービスは色々出ていますが、SmallChatはサイトに設置したチャットをSlackと連携させてくれて、やりとりが全部Slackで完結するので超便利です。\n\n普段自分が見てるところに通知が来ないと、見落としてしまいますからね。。\n\n* * *\n\n多言語翻訳 / wovn.io\n===============\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwovn.io%2Fja%2F\" title=\"WOVN.io\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://wovn.io/ja/\">wovn.io</a></cite>\n\n特にうちみたいな言語に依存しないツール系サービスは、最初から海外展開も視野に入れたいところ。\n\nRailsなどでがっつりi18n対応するのがもちろん王道ですが、ページ数も少ないときにさくっと翻訳を提供したければ、wovn.ioがものすごく便利です。\n\n少し前に料金改定があり、無料プランでも動的ページ対応など、かなり使える範囲が増えました。\n\n自動で機械翻訳もしてくれるので、とりあえずお任せで翻訳しておいて、余裕ができてからプロに頼んで翻訳の精度を上げにいく、という使い方ができるのが超絶便利。\n\n* * *\n\n使い方ガイド（FAQ） / Tayori\n====================\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ftayori.com%2F\" title=\"Tayori - 無料のカスタマーサポートツール\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://tayori.com/\">tayori.com</a></cite>\n\n使い方ガイドをいい感じに作るのは大変だし、更新するたびにデプロイするのもめんどくさい。\n\nそんなときはTayoriです。PRTimesさんが運営しています。\n\n多機能でチャットやアンケート機能もありますが、チャットはSlackに投げてくれるほうがうれしいので前述のSmallChatを使っています。\n\nうちではFAQサービスを使い方ガイドとして活用しています。自分が運営しているトーナメント用に作ったのはこんな感じ。\n\n[THE TOURNAMENT使い方ガイド](https://tayori.com/faq/8ffbdba0a70dcacc24ed64550dfa39a4332ac44b)\n\n* * *\n\n開発ロードマップ / Trello\n=================\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ftrello.com%2F\" title=\"Trello\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://trello.com/\">trello.com</a></cite>\n\n今後の開発ロードマップをTrelloで作って公開しようという話。\n\nこれは前に記事書いたので詳しくはそちらをどうぞ。便利です。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2017%2F09%2F29%2F104504\" title=\"個人開発のWebサービスで、Trelloを使っていい感じに開発ロードマップを公開した話 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2017/09/29/104504\">blog.notsobad.jp</a></cite>\n\n* * *\n\nセッション録画 / Smart Look\n====================\n\n[https://www.smartlook.com/](https://www.smartlook.com/)\n\nこれは何かというと、サイトを訪れたユーザーがどんな動きをしているか、動画で再現してくれるサービスです。\n\n（直接録画しているわけではなく、スクロールやクリックイベントを取得して、後からそれを再現しているイメージ）\n\n特にUIを検討するときに、離脱の数字だけじゃなくて実際のユーザーの動きを見られるのはとても参考になります。\n\nアプリだと「Repro」が有名ですが、Web用にはあんまり日本でこの手のサービスがない感じ。\n\n海外でも無料版は利用枠がすごい少なかったりする中で、このSmartLookは十分に使えていい感じです。\n\nこのジャンルのサービスを探すのにだいぶ苦労したのですが、「session replay」「session recording」とかで検索するとよさそうです。ご参考までに。\n\n* * *\n\nステータスページ / StatusKit\n====================\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fstatuskit.com%2F\" title=\"StatusKit - Everything you need to create your awesome status page\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://statuskit.com/\">statuskit.com</a></cite>\n\nサービスの障害情報を表示するページ。\n\nこの分野だとstatuspage.ioがメジャーですが、残念ながら有料プランのみ。 無料プランがある中でデザインもきれい目なstatus kitを使っています。\n\nまぁせっかくステータスページ作っても、一般ユーザーが見ることはまずないです。 しかも自サイトのフッターとかにリンク置くことが多いけど、サイトが落ちてる時はそもそもそれが見れないっていう。。\n\nじゃあ何でこれ用意するのかっていうと、過去の障害情報もすべてオープンにして信頼感を出すっていうのと、あとはAPI提供を始めた時の開発者向けにっていうくらいかなーと思っています。\n\n自分のサービスで作成したのはこんな感じ。まだ作ったところなのでこれから様子見です。\n\n[THE TOURNAMENTステータスページ](https://notsobad.statuskit.com/)\n\n* * *\n\nまとめ\n===\n\nこれが全部無料で利用できるなんて、本当に便利な時代です。その分自分もWebサービスで稼ぐのが大変なわけですが。。\n\n紹介したものはどれも便利なんですが、チャット・翻訳・セッション録画は、サイトでjsがゴリゴリ動くため、全部入れるとパフォーマンス的にしんどいかもしれません。\n\n録画はUI改善フェーズとかにピンポイントで使って、あとはチャットか翻訳をフェーズに合わせて使い分ける感じがいいのかなーと思ったり。\n\nちなみにこういうツール系のサービスは、よくまさとらんさんがまとめてくれていたりするので、気になる人はフォローされるとよいと思います。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ftwitter.com%2F0310lan\" title=\"まさとらん (@0310lan) | Twitter\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://twitter.com/0310lan\">twitter.com</a></cite>\n\nおしまい。","date":1520688840000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180310214450.png","tag":["個人開発論","技術系"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"5r2PCYFNnNmRb8L8TInm6N","type":"Entry","createdAt":"2020-05-27T09:06:48.932Z","updatedAt":"2020-06-13T04:00:57.966Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（後編）","slug":"2018/02/19/095533","excerpt":"この記事は、Pieter Levels([@levelsio](https://twitter.com/levelsio))の「[Turning side projects into profitable startups](https://levels.io/startups/)」という記事を、本人の許諾を得て翻訳・掲載しているものです。\n\n※前編・中編はこちら。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F15%2F192155\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（前編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/15/192155\">blog.notsobad.jp</a></cite>\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F17%2F092358\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（中編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/17/092358\">blog.notsobad.jp</a></cite>\n\n後編はいよいよスタートアッププロセスの後半、「グロース」「マネタイズ」「自動化」「Exit」です。 コアな部分なので、どれも読み応えがあって参考になると思います！\n\nもし翻訳に間違いなど見つけた方は、info\\[at\\]notsobad.jpまでご連絡ください。","content":"この記事は、Pieter Levels([@levelsio](https://twitter.com/levelsio))の「[Turning side projects into profitable startups](https://levels.io/startups/)」という記事を、本人の許諾を得て翻訳・掲載しているものです。\n\n※前編・中編はこちら。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F15%2F192155\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（前編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/15/192155\">blog.notsobad.jp</a></cite>\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F17%2F092358\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（中編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/17/092358\">blog.notsobad.jp</a></cite>\n\n後編はいよいよスタートアッププロセスの後半、「グロース」「マネタイズ」「自動化」「Exit」です。 コアな部分なので、どれも読み応えがあって参考になると思います！\n\nもし翻訳に間違いなど見つけた方は、info\\[at\\]notsobad.jpまでご連絡ください。### 目次\n\n*   [目次](#目次)\n*   [グロース](#グロース)\n    *   [オーガニックな成長](#オーガニックな成長)\n    *   [ユーザーと一緒にサービスを作る](#ユーザーと一緒にサービスを作る)\n    *   [再エンゲージ](#再エンゲージ)\n    *   [スタートアップのライブ配信](#スタートアップのライブ配信)\n    *   [ローンチし続ける](#ローンチし続ける)\n*   [マネタイズ](#マネタイズ)\n    *   [課金への抵抗を無視する](#課金への抵抗を無視する)\n    *   [作る前に課金を検証する](#作る前に課金を検証する)\n    *   [すべての機能に購入ボタンを置く](#すべての機能に購入ボタンを置く)\n    *   [周辺サービスで稼ぐ](#周辺サービスで稼ぐ)\n    *   [スポンサー](#スポンサー)\n    *   [Patreon](#Patreon)\n    *   [サブスクリプション（継続課金）](#サブスクリプション継続課金)\n*   [自動化](#自動化)\n    *   [人間もひとり雇う](#人間もひとり雇う)\n*   [Exit（売却）](#Exit売却)\n*   [まとめ](#まとめ)\n\n* * *\n\nグロース\n----\n\n![f:id:o_tomomichi:20180216102441p:plain](https://storage.googleapis.com/blog-notsobad/images/20180216102441.png \"f:id:o_tomomichi:20180216102441p:plain\")\n\nさぁ、無事にローンチできたら、次はサイトがちゃんと機能しているか、アナリティクスを確認する必要があります。\n\nだいたいの場合、トラフィックは減少していきます。 最初ローンチしたときに大量のトラフィックを経験して、その後はアクセスが落ち続けるのです。 これはいたって普通のことで、あなたのサイト有用性が検証されなかったというわけではありません。\n\nしかし、もし1週間、1ヶ月経って、誰もいなくなってしまったとしたら、そのプロダクトは成功ではなかったと考えるしかないですね。 その頃になってもまだトラクションがあるなら、そのトラクションを育てていくべきです。\n\n### オーガニックな成長\n\n私が最近本当に嫌いなのは（笑）、このDojoのイベントでもあるのですが、オーガニックでない成長についての多くの話です。 それはうまくいかないと思っています。\n\nInstagramのbotについて、たくさんの話を聞きます。私も先週試してみましたが、うまくいきませんでした。 Twitterの自動フォロー/アンフォローbotがあり、電子メールリストの売買やスパムがあります。\n\nこういったすべてのグレーな、というか多くはブラックなやり方が、私は本当に嫌いなのです。 よくカフェで色んな人とこれについて議論します。\n\nあなたがやろうとしていることは、よくないことです。やめましょう。 しかし、私はモラルに訴えたいわけではありません。\n\n![f:id:o_tomomichi:20180115153414j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153414.jpg \"f:id:o_tomomichi:20180115153414j:plain\")\n\n私が言いたいのは、非オーガニックな成長がこのように見えるということです。 非常に醜い牛です。よくありません。\n\n![f:id:o_tomomichi:20180115153338j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153338.jpg \"f:id:o_tomomichi:20180115153338j:plain\")\n\nこっちの牛がどれほど美しいかを見てください。ほら！:)\n\nこれがオーガニックな成長です。つまり、人々が本当にあなたのウェブサイトを好きになるということです。 彼らはbotや広告のせいでそこにいるのではありません。\n\n広告が倫理にもとるというわけではありませんが、私は好きではありません。 このなかでアドブロッカーを使っている人はいますか？ほら。 なぜ広告ブロッカーを使いながら、まだFacebookやGoogleで広告を購入するのですか。 それはちょっと、道徳的にばかげています。広告が未来になるとは、私には思えません。\n\n広告を使えば、そうですね、たとえば1万人のユーザー登録を得られるかもしれません。 でも広告をやめると、ゆっくりと消えていってしまいます。 ベンチャーキャピタルの出資を受けたスタートアップで、このケースが多いように思います。\n\nそれは偽りの成長です。偽りの成長と、お金で買ったトラフィック。 それがうまくいくとは思えません。\n\nお金が止まると、ビジネスも止まってしまいます。 そして、その後は落ちていくだけです。そうでしょう？ 結局、あなたは実際に何か役に立つものを作ったわけではなかったということです。\n\nオーガニックな成長は、得るのが難しいですが、はるかにいいものです。 うまく得ることができれば、実際に使ってくれるユーザーがいて、プロダクトが愛されている、つまりプロダクトの有用性が検証できたということになります。 もしトラフィックを得られない場合、プロダクトがよくなかったということです。\n\nだからオーガニックな成長は、プロダクトの良し悪しを判断する究極のテストです。 いまのプロダクトを微調整するべきか、それともまったく新しいプロダクトにピボットすべきか。 もしこれが全部有料トラフィックだったとしたら、ユーザーが実際にプロダクトを気に入っているのかどうかを判断するのは難しくなります。\n\n### ユーザーと一緒にサービスを作る\n\n![f:id:o_tomomichi:20180115153415j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153415.jpg \"f:id:o_tomomichi:20180115153415j:plain\")\n\nこうした成長を得るために、私がやっている非常に重要なことを紹介しましょう。 ユーザーと一緒にサービスを作るのです。\n\n私のすべてのサイトやアプリには、この小さなフィードバックボックスが置いてあります。 「何かバグがありましたか？私も人間なので、優しく伝えてください。きっと直しますから！」\n\nなぜこんな書き方をしているかと言うと、ユーザーはひどく怒っていることがあるからです。 優しくしてくれと言い続けた結果、いまではみんな本当に優しく接してくれるようになりました。うまくいったと思います（笑）\n\nこのスライドのように、サイトで画像が表示されていない場合に「画像が壊れてるよ」とフィードバックすることもできます。 でもそれより、機能追加の要求がたくさん来るのです。\n\nユーザーから意見をもらって、毎週のように新機能を追加したり機能を変更したりしています。 今週はNomad Listの検索ボックスを右に移動しました。誰かが邪魔だと言ってきたのです。\n\nこうすることでユーザーは満足しますし、プロダクトを作るプロセスに関わることにもなります。 コクリエイティング（共同創造）と言うのかもしれません。\n\nユーザーと一緒に作っていくのはすごいことです。 そうすることで彼らは、ええっと、何て言うんでしたっけ。 そう、アンバサダー！あなたはイギリス人ですね、ありがとう。 彼らはプロダクトのアンバサダーになってくれるのです。\n\n「Pieterに検索ボックスのことメールしたら、ほんとに変えてくれたんだ！お前もNomad List使ってみろよ」 と、友達に話すかもしれません。いいですね。\n\nそう、これはとてもポジティブな効果がありますし、ユーザーはスマートです。 もちろん彼らの言うことすべてを聞くべきではありませんが、間違いなく考慮する必要はあります。\n\n![f:id:o_tomomichi:20180115153416j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153416.jpg \"f:id:o_tomomichi:20180115153416j:plain\")\n\nより美しいフィードバックボックスにしたいなら、もちろんIntercomです。 ほとんどのスタートアップで使用されています。 とてもいいサービスで、同じような機能を持っています。ただ有料なのがちょっと残念ですね。\n\n### 再エンゲージ\n\n![f:id:o_tomomichi:20180115153337j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153337.jpg \"f:id:o_tomomichi:20180115153337j:plain\")\n\nサイトやアプリに、ユーザーを後から再度エンゲージ（興味を惹く）するための仕組みを追加しておくことは非常に重要です。\n\nローンチしてHacker NewsやProduct Huntに掲載すると、10,000人のユーザーが来てくれました。 でもしばらくすると、その10,000人はいなくなってしまいます。どうやってもう一度コンタクトを取りますか？\n\n再度エンゲージするのです。メールアドレスを取得しておきましょう。 たとえば、「自分のエリアでフードのオトクな割引があるときにお知らせする」とか。\n\nリモート求人サイトのRemote OKでは、毎日届く求人情報お知らせメールを購読できるようにしました。 Nomad Listにもニュースレターがあります。\n\nこうすれば、後からユーザーにメールを送ることができます。ただし、スパムは絶対にだめです。 メールを使うのは慎重に。受信ボックスに迷惑メールが溢れるのは、みんなイヤでしょう？\n\n### スタートアップのライブ配信\n\n![f:id:o_tomomichi:20180115153417j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153417.jpg \"f:id:o_tomomichi:20180115153417j:plain\")\n\n非常に重要で、すごくモダンなやり方を紹介しましょう。 もしこれをやれば、ここにいる他の誰よりもずっと先を行くことになります。 スタートアップを作っているところを、ライブで配信するのです。\n\n写真の男性は私の友人、というかちょっとした知り合い、いや知り合いでもないな。 お互い何も知りません。一度だけTwitterで絡みました（笑）\n\nドリュー・ウィルソンです。本当にクールな男で、決済のスタートアップ「Plasso」を作りました。 彼はその過程のほとんどを一般に公開して、ライブ配信していたのです。\n\nここ（写真の右側）に座っていますね。ずっと見てるとちょっと退屈だけど、音楽なんかも演奏してくれるのでおもしろいです。 コーディングもここでするので、目の前でプロダクトが作られていくところを見ることができるのです。最高にクールですね。\n\n何がすごいかって、誰もそれをやっていないということです。 私はHoodmapsのときにやりましたが、他にやっている人を見たことがありません。\n\nたくさんの注目とメディアが集まるので、間違いなく試すべきです。 勇気を出して、ストリーミングしましょう。生産性もすごく上がります。\n\n私のときは100人が見てくれていました。 ちょっと緊張してあまり速くコーディングできませんでしたが、いい試みでした。\n\n### ローンチし続ける\n\n![f:id:o_tomomichi:20180115153418j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153418.jpg \"f:id:o_tomomichi:20180115153418j:plain\")\n\n成長し続けるためのもう一つの方法は、ローンチを1回で終わらせないことです。 機能を追加して、メディアにも再度投稿しましょう。\n\n2〜3ヶ月ごとにそれを繰り返してください。 2か月ごとにProduct Huntに載れるとは思いませんが、1年に1回なら十分狙えるでしょう。\n\n大きなバージョンアップをしたとき、または何かしら変更を加えたとき、再度ローンチするチャンスです。 人の意識に留まり続けるためには、これが非常に重要なのです。\n\n* * *\n\nマネタイズ\n-----\n\n![f:id:o_tomomichi:20180115153419j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153419.jpg \"f:id:o_tomomichi:20180115153419j:plain\")\n\nあなたがやっているのは慈善事業ではありません。ビジネスです。 人々があなたのプロダクトにお金を払わなければ、存続の危機です。とても大事なことですね。\n\nお金を稼いでいないスタートアップをたくさん見てきました。 一体どうやって家賃を払っているんでしょうね（笑） でもこれではダメなことは間違いありません。\n\nお金を稼ぐことはとても重要です。請求書を支払わないといけません。 3ヶ月以内には、いや2ヶ月以内には、最初の売上が入ったら。。 ローンチしたその日から、お金を稼いでください。 そうでないなら、やはりプロダクトが検証できていなかったということです。\n\nあなたは素敵なスタートアップを作ったかもしれませんが、お金を稼いでいないのであれば、プロダクトとしては検証できていないのです。 これは大きな問題です。お金に集中しましょう。でも私たちはみなお金に集中することが苦手です。\n\n私はオランダ人です。オランダ人は歴史的に商人の民族ですが、お金に関してはとても変わった考えをします。 実際にお金を稼ぐことは許されないのです。\n\n### 課金への抵抗を無視する\n\n![f:id:o_tomomichi:20180115153336j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153336.jpg \"f:id:o_tomomichi:20180115153336j:plain\") （訳注：有料課金することに対して怒っているユーザーのメッセージ）\n\nこれは私が自分で書いたダミーですが、典型的な例です。有料課金を始めると、こういうメールを必ず受け取ることになります。\n\n本当にこんなメールがよく届くのです。完全にばかげています。彼らはあなたが大企業だと思っているのです。 実際のところ、あなたはひとりでノートPCで開発していて、自分の支払いを済ませてコーヒーを買いたいだけなのに。\n\nこれは本当によくあることです。Redditでは特によく起こります。あなたがサービスに課金しようとすると、とてもいやがるのです。 けれど、無視して課金しなければいけません。\n\nクオリティは下がりますが、無料の代替サービスは何かしらあります。 しかしあなたは彼らと勝負しているわけではありません。実際にお金を課金してもらうところで勝負しているのです。\n\n### 作る前に課金を検証する\n\n![f:id:o_tomomichi:20180115153420j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153420.jpg \"f:id:o_tomomichi:20180115153420j:plain\")\n\n課金しながらプロダクトの検証も同時に行った非常にいい例が、Bufferです。 彼らがこうしたやり方のすべてを生み出しました。\n\n彼らはまだプロダクトをローンチすらしていないときに、料金表のボタンだけ置いたランディングページを公開しました。 もしクリックしたらメール入力フォームが表示されて、サービスがローンチしたときに通知されるよう登録できるのです。\n\nこれはすごいことでした。 何人の人がこれをクリックしてくれるのか、何人の人がメールを登録してくれるのか、そのまま検証することができたからです。\n\nこうやって10,000人の見込み顧客リストができます。 実際に料金表のリンクをクリックしてくれているので、購入意欲が高い人たちです。\n\n私はこのアイデアをさらに拡張しました。フェイクのStripe決済フォームを用意したのです。 ユーザーは、ほしい機能に対してクレジットカード情報を入力して課金します。 ただ入力しても、実際に請求はされません。支払いはされていないと、ユーザーにも伝えました。\n\nこの決済フォームはフェイクでしたが、その機能を組み込んだ場合、ユーザーにお金を支払ってもらえるかどうかが分かりました。 結局その機能は作らなかったのですが。\n\n繰り返しますが、実際に作る前に、ユーザーが課金してくれるかどうか検証するのです。\n\n### すべての機能に購入ボタンを置く\n\n![f:id:o_tomomichi:20180115153421j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153421.jpg \"f:id:o_tomomichi:20180115153421j:plain\")\n\nすべてに購入ボタンを用意してください。 これはこのプレゼンで最も重要なスライドです。\n\nプロダクトのどの機能に課金してもらえるかを知るために、すべての機能に購入ボタンを用意しましょう。 もし誰も支払おうとしなければ無料で、ただし他の機能を制限して提供します。 そしてもう一度ユーザーが何と言うか見てみましょう。これが一番大事なところです。\n\n### 周辺サービスで稼ぐ\n\nあなたのスタートアップに使えるかもしれない、ビジネスモデルをいくつか紹介します。 みんなが知っている多くのウェブサイトやスタートアップは、実際にはメインのプロダクトからお金を稼いでいるわけではありません。 彼らは主力製品の、一種の副産物からお金を稼いでいるのです。\n\n![f:id:o_tomomichi:20180115153422j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153422.jpg \"f:id:o_tomomichi:20180115153422j:plain\")\n\nこれはNomad Listです。このサイトは完全に無料で、お金を稼ぐものではありません。 世界中の都市をフィルタリングすることができますが、誰もこれに対してお金を払っているわけではないのです。\n\n![f:id:o_tomomichi:20180115153423j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153423.jpg \"f:id:o_tomomichi:20180115153423j:plain\")\n\nしかし同じNomad Listという名前で、旅行者のためのSNSのようなサービスも提供しています。 こちらには7,000人もの人がお金を払ってくれています。\n\n![f:id:o_tomomichi:20180216144003p:plain](https://storage.googleapis.com/blog-notsobad/images/20180216144003.png \"f:id:o_tomomichi:20180216144003p:plain\") （訳注：Dribbbleの画面キャプチャが、著作権上の問題で差し替えられている）\n\nDribbleです。デザイナーの人はみんな知っていますよね？デザインに関するウェブサイトです。 誰でも無料でDribbleにデザインを投稿できて、ユーザーは誰もお金を払いません。\n\nただし、企業が採用情報を投稿できる求人情報サイトがあって、そこで企業にたくさんお金を払ってもらっているんです。 たしか30日間で299ドルだったと思います。\n\nだから、あなたもフリーミアムを採用して、メインのプロダクトを無料にしてもいいかもしれません。 何かその周辺プロダクトでお金を稼ぐのです。\n\n### スポンサー\n\n![f:id:o_tomomichi:20180115153334j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153334.jpg \"f:id:o_tomomichi:20180115153334j:plain\")\n\nまた、スポンサーもいいでしょう。 Nomad Listを立ち上げたときは、初日にAutomatticとWordPressの創始者、Matt Mullenwegがメールをくれました。 サイトを気に入って、「スポンサーさせてくれないかな？」と言ってくれたのです。\n\n「もちろんです、小さなバナーを追加しますよ！」 そしてAutomatticとWordPressは求人バナーを掲載し、月に数千ドルを支払ってくれました。 いまもまだ続いています。これは非常に助かりましたし、本当によかったです。\n\nスポンサーを獲得するのはとても難しいです。 自分からメールしたりして、こうしたスポンサーを見つけるのはほとんど不可能でしょう。 あなたがラッキーだったらクールな会社がスポンサーしてくれて、開発を続けられるように助けてくれるかもしれません。\n\nAutomatticからのお金は、本当に助けになりました。 最初はまだ十分稼げていなかったので、このお金のおかげで開発を続けることができたのです。\n\n### Patreon\n\n![f:id:o_tomomichi:20180218213730p:plain](https://storage.googleapis.com/blog-notsobad/images/20180218213730.png \"f:id:o_tomomichi:20180218213730p:plain\")\n\nよりクールでモダンなモデルは「Patreon」です。 特定の機能に対して支払いを求めるのでなく、クリエイターへの純粋な金銭的支援をお願いできます。\n\nちょうど今週Twitterで、オープンソースの開発に多大な貢献をしているSindre Sorhuが支援を依頼しているのを見かけました。 「この数年やってきたオープンソースの仕事に対して、いくらか支援してくれないかな？ずっと無給でやってるんだ」 たぶん、彼は数千ドルくらい集めたんじゃないかと思います。\n\n![f:id:o_tomomichi:20180115153424j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153424.jpg \"f:id:o_tomomichi:20180115153424j:plain\")\n\nこれは、いま日本でYouTuberとして活動しているイギリス人の友人です。 彼には毎月数ドル支払ってくれる800人のファンがいて、月3,000ドルを稼いでいます。\n\n今ではこれは、持続的な収益を上げる十分に現実的な手段と言えるでしょう。\n\n![f:id:o_tomomichi:20180115153425j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153425.jpg \"f:id:o_tomomichi:20180115153425j:plain\")\n\niOS用のpodcastアプリ「Overcast」も、同じことをしています。 彼らはもはやプレミアム機能を持っていません。 何も見返りがなくても、「OK、このアプリを愛してるから12ドル支払うよ」と言ってくれるファンがいるのです。 純粋なサポーターです。 そういう人たちが1日400人くらいいるので、十分なお金になっています。\n\n### サブスクリプション（継続課金）\n\n![f:id:o_tomomichi:20180115153433j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153433.jpg \"f:id:o_tomomichi:20180115153433j:plain\")\n\nマネタイズについて、非常に重要なことがあります。 たくさんの人が同じ失敗をしているのを見ましたし、私も同じことをしました。 それは、プレミアム機能の開放やプロダクトの使用に対して、1回きりの支払いで50ドルを請求してしまうことです。 これでは継続的な売上にはなりません。継続課金は非常に重要です。\n\n上の表をみてください。 価格が75ドルのプロダクトがあり、会社の売上高が年25％伸びたとします。まあまあの成長です。 初年度は買い切りでもサブスクリプションでも、どちらも75,000ドルの売上があります。 これが5年目には、買い切り型では年18.3万ドル、サブスクリプション型にしていれば年200万ドルにもなります。 継続課金してくれるユーザーがどんどん積み上がっていくからです。指数関数的な成長で、大きなお金となります。\n\nもちろん解約も出ます。サブスクリプションをキャンセルするユーザーが出てくるでしょう。 それでもトータルで考えると、私はサブスクリプションに肯定的です。\n\n唯一の問題は、サブスクリプションはユーザーに嫌がられるということです。 私も数年前に申し込んだサービスの請求書を受け取るのは大嫌いです。 「fxxk、まだこれにお金を払ってたのか！もうとっくに使ってないのに！」 これは確かにイヤですね。\n\n* * *\n\n自動化\n---\n\n![f:id:o_tomomichi:20180115153333j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153333.jpg \"f:id:o_tomomichi:20180115153333j:plain\")\n\nビジネスが軌道に乗ってお金を稼げるようになってくると、ちょっとそのビジネスに飽きてくるかもしれません。 1年か2年スタートアップを続けた後に、私もそうなりました。 私は新しいことをやるのが好きなんです。何度も何度も同じことをやり続けるのは嫌いです。\n\nそこで、ロボットを使ってあなたのために働いてもらいましょう。 人を雇うこともできますが、大変です。 ロボットならずっと簡単で、効率的だと思います。自動化するのです。\n\n![f:id:o_tomomichi:20180115153427j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153427.jpg \"f:id:o_tomomichi:20180115153427j:plain\")\n\nこれは現在の私のサーバです。数時間前にスクリーンショットを撮りました。 一番上に、187台のロボットが稼働しているのが見えますね。\n\nこれらはすべて並列のプロセスで、私のサイトのために働いてくれています。 Nomad Listの各都市の天気情報を取ってきたり、RemoteOKの求人情報を取得してきたり、ユーザーの払い戻し処理を行ったり。 どちらのサイトも100％自動化されており、これらのロボットがすべてを動かしているのです。\n\n![f:id:o_tomomichi:20180115153428j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153428.jpg \"f:id:o_tomomichi:20180115153428j:plain\")\n\nこれがcronジョブの一覧。技術的な用語で、実行時間をスケジュールされたプログラムのことですね。 こうした処理は、すべて毎時、毎日、毎週行う必要があることです。 このラインのすべてが、私のビジネスの全体なのです。\n\nすべてを動かしているのはロボットで、私はこれが最高にクールなことだと思っています。 サンフランシスコのどこかにこのサーバーがあって、それがすべての仕事をしてくれていると思うと、余計クールですよね。\n\nあらゆるところで180〜700台のロボットが稼働していて、24時間365日働いています。 必要なときには自動でスケールアップしたり、スケールダウンしたりしてくれます。 もっとたくさんの人手が必要になったら、ロボットが勝手により多くのリソースを確保するのです。 わずか数秒で、もっとたくさんのロボットを。\n\n言葉でうまく伝えるのは難しいですが、これがどんなにすごいことか…。 いまやビジネス全体を、あなたのために働いてくれるロボット、プログラムに任せることができるのです。\n\nもちろん人を雇うこともできます、でも自由に解雇することはできません。労働法で取り締まられているからです。 また病気になったり、他にも色々面倒があります。 つまらないことかもしれませんが、現実です。 正直に言って、ロボットは多くの仕事を人よりも効率的にやってくれます。\n\n![f:id:o_tomomichi:20180115153332j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153332.jpg \"f:id:o_tomomichi:20180115153332j:plain\")\n\n例えばこれは、ロボットを監視するアプリです。ロボットがロボットを監視しているのです！\n\n### 人間もひとり雇う\n\n![f:id:o_tomomichi:20180115153429j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153429.jpg \"f:id:o_tomomichi:20180115153429j:plain\")\n\nさて、あなたが作ったビジネスの中で、人間に残された仕事は何でしょうか？ 私は、フルタイムの人間をひとり雇用することはとても重要だと思っています。\n\nすべてを自動化したあとに、これらすべてのロボットを管理し、サーバが落ちていないかをチェックしてもらうのです。 そうでなければ、やはりあなたが24時間365日、ビジネスのために貼り付く必要が出てしまいます。\n\n私も夜中に、午前4時だったりするのですが、何度も起こされました。 サイトが落ちていて、直すために3時間起きて作業するはめになったり。\n\n誰か、いつでもスタンバイしてくれている人がほしいですよね。 サーバがダウンしてロボットが機能していないときに、アラートを受け取ってくれる人が。\n\n* * *\n\nExit（売却）\n--------\n\n![f:id:o_tomomichi:20180115153430j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153430.jpg \"f:id:o_tomomichi:20180115153430j:plain\")\n\nExitも非常に重要です。自分が作ったビジネスを売ること。私はまだやったことがありません。 ビジネスを売らないか、という提案をもらったことはあります。ただ金額面で満足できませんでした。 最終的に、うまく事業の売却と折り合いをつけていくことはとても重要です。\n\n![f:id:o_tomomichi:20180115153431j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153431.jpg \"f:id:o_tomomichi:20180115153431j:plain\")\n\n事業の売却価格は通常こんな感じで決まります。 成長率が25％で年10万ドルの売上があるとすると、通常50万ドルくらい要求することができます。 もし成長率がもっと高い場合は、10万ドルのビジネスに100万ドルを要求することだってできます。\n\nはい、これはとても重要なポイントです。これが世の中のスタートアップが成長率を異常に気にかける理由です。 売却価格をよくするために、高い成長率がほしいのです。重要なことですね。\n\n会社の売却に関しては、心理的な要素も多分に関係してきます。 会社はあなたの子どもです。 Nomad Listは私の子どもです。 もし売却することになったら、私はおそらくひどく落ち込んでしまうでしょう。 そのことも考える必要があります。\n\n* * *\n\nまとめ\n===\n\n![f:id:o_tomomichi:20180115153331j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153331.jpg \"f:id:o_tomomichi:20180115153331j:plain\")\n\nどうでしたか、これがスタートアッププロセスの全体像です。\n\n自分自身の問題を解決する。サービスを構築する。そしてローンチする。オーガニックに成長させる。あくまで私の意見ですが、とても大事ですね。収益化して、自動化して、売却する。そして、もう一度はじめからやるのです。\n\nこれが、私が数年間スタートアップをやり続けて見つけた小さなエコシステム、パターンのようなものです。 最後まで聞いてくれて本当にありがとう！ ^\\_^\n\n![f:id:o_tomomichi:20180115153432j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153432.jpg \"f:id:o_tomomichi:20180115153432j:plain\")\n\n以下のリンクから、YouTubeで25分のQ＆A動画を見ることができます。\n\n[Turning Side Projects into Profitable Startups - YouTube](https://www.youtube.com/watch?v=6reLWfFNer0#t37m10s)\n\nP.S. いま私は「[MAKE](https://makebook.io/?ref=levelsio)」という、ブートストラップでのスタートアップに関する本を書いています。現在[事前予約](https://makebook.io/?ref=levelsio)が可能です。 また、もし私の冒険をもっと見てみたいなら、[Instagram](https://instagram.com/levelsio)や[Twitter](https://twitter.com/levelsio)をチェックしてください。 Eメールは使っていないので、質問があれば[Twitter](https://twitter.com/levelsio)でお願いします。\n\n* * *\n\n（訳者あとがき）\n\n@levelsioの渾身の記事、いかがでしたか？\n\nスタートアップの各プロセスについて、実体験に基づく具体的な説明が参考になりますね。 自分のサービスでも色々試してみたいと思います。\n\nもし本記事について感想や質問などあれば、翻訳して@levelsio本人にも伝えますのでお気軽にご連絡ください。\n\nまた翻訳間違いも（意訳しまくってるのであれですが）、見つけたらぜひ教えてもらえるとうれしいです。\n\nおしまい。","date":1519001733000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180211231653.png","tag":["個人開発論","levelsio","翻訳"]}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"2widkdbc59vz"}},"id":"3dKXCZRqGozrrzJmRkYYbZ","type":"Entry","createdAt":"2020-05-27T09:06:49.502Z","updatedAt":"2020-06-13T04:01:01.476Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（中編）","slug":"2018/02/17/092358","excerpt":"この記事は、Pieter Levels([@levelsio](https://twitter.com/levelsio))の「[Turning side projects into profitable startups](https://levels.io/startups/)」という記事を、本人の許諾を得て翻訳・掲載しているものです。\n\n※前編はこちら。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F15%2F192155\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（前編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/15/192155\">blog.notsobad.jp</a></cite>\n\n中編はスタートアップのプロセスの前半、「アイデア」「構築」「ローンチ」についてです。\n\nもし翻訳に間違いなど見つけた方は、info\\[at\\]notsobad.jpまでご連絡ください。","content":"この記事は、Pieter Levels([@levelsio](https://twitter.com/levelsio))の「[Turning side projects into profitable startups](https://levels.io/startups/)」という記事を、本人の許諾を得て翻訳・掲載しているものです。\n\n※前編はこちら。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F15%2F192155\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（前編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/15/192155\">blog.notsobad.jp</a></cite>\n\n中編はスタートアップのプロセスの前半、「アイデア」「構築」「ローンチ」についてです。\n\nもし翻訳に間違いなど見つけた方は、info\\[at\\]notsobad.jpまでご連絡ください。### 目次\n\n*   [目次](#目次)\n*   [アイデア](#アイデア)\n    *   [小さく始める](#小さく始める)\n    *   [アイデアリスト](#アイデアリスト)\n    *   [ひとりでやる](#ひとりでやる)\n    *   [アイデアを共有する](#アイデアを共有する)\n*   [ビルド（構築）](#ビルド構築)\n    *   [自分でやる](#自分でやる)\n    *   [それでもプログラミングしたくない](#それでもプログラミングしたくない)\n    *   [プロトタイプに時間をかけすぎない](#プロトタイプに時間をかけすぎない)\n*   [ローンチ](#ローンチ)\n    *   [Product Hunt](#Product-Hunt)\n    *   [Hacker News](#Hacker-News)\n    *   [Reddit](#Reddit)\n    *   [ニッチな専門サイト](#ニッチな専門サイト)\n    *   [Q&A](#QA)\n\n* * *\n\nアイデア\n----\n\n![f:id:o_tomomichi:20180115153357j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153357.jpg \"f:id:o_tomomichi:20180115153357j:plain\")\n\nそれでは、まずはアイデアから始めましょう。 みなさんは既にスタートアップやアプリのアイデアを持っていましたが、いいアイデアが多かったと思います。\n\n本当にひどいアイデアもよくありますが、そうなっている理由は、問題に集中していないからです。 新しいフードデリバリーアプリや、新しいファッションデリバリーアプリを作ろうという話を、よく聞きます。 けれど、それはあなたが本当に解決したいと思う問題ではありません。\n\n私のやり方は、自分の生活をよく見ること、そして自分が本当に困っていることが何かを考えることです。\n\n![f:id:o_tomomichi:20180115153358j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153358.jpg \"f:id:o_tomomichi:20180115153358j:plain\")\n\n日常生活の中で、自分が何かできることや、あるいは欠けている情報など、何でもいいのです。\n\nNomad Listのとき私は、自分が訪れるべき新しい都市を知りたかったのです。 Hoodmapsのとき、私は大都市の観光センターで途方に暮れていました。 「Fxxk、俺は本当の街を見てみたいんだ！」だからHoodmapsを作りました。\n\n私はいつも問題を見つけて、それを解決してきました。これが私のやり方なんだと思います。\n\n![f:id:o_tomomichi:20180115153345j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153345.jpg \"f:id:o_tomomichi:20180115153345j:plain\")\n\nこの方法がいいのは、解決したい問題を見つけたとき、あなたがその問題の専門家であることです。 専門家であることは、競争上の優位性になります。\n\nたとえばあなた庭師だったとしましょう。 あなたは庭師が花や植物などについて抱えている問題についてよく知っています。 他の庭師以外、一般の人は誰もそれを知りません。 あなたは、自分が競争力を持てるニッチな場所を手に入れるのです。\n\n![f:id:o_tomomichi:20180115153359j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153359.jpg \"f:id:o_tomomichi:20180115153359j:plain\")\n\n問題は、私たちがみんなよく似ているということです。\n\n見てください、ここにいる人は多くがヒゲを生やし、髪を短くして両サイドを刈り上げています。 私と同じように。 つまり、私たちはみな同じ問題を抱えて、同じアイデアを考えつくようになります。\n\nそうすると、他の人とは違うようになりたいですよね。どうしますか？そう、何かクレイジーなことをやる必要があるのです。\n\n![f:id:o_tomomichi:20180115153400j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153400.jpg \"f:id:o_tomomichi:20180115153400j:plain\")\n\nたとえばスカイダイビングしてみたり...\n\n![f:id:o_tomomichi:20180115153344j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153344.jpg \"f:id:o_tomomichi:20180115153344j:plain\")\n\n...または電話を持たずに6ヶ月ジャングルを冒険してみたり、もしくは別の何かオリジナルのことをやってみたり。\n\n![f:id:o_tomomichi:20180115153401j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153401.jpg \"f:id:o_tomomichi:20180115153401j:plain\")\n\nやりましょう。新しいカルチャーを探すのです。\n\n尖ったカルチャーは、タブー視されている間はまだ誰もやっていないので、やはり競争上の優位性を得られます。 そこでビジネスやアプリのアイデア、サービスのアイデアを見つけることができるかもしれません。\n\nしかしオリジナルになる必要があります。 でなければ、あなたは他の誰かと同じことをしているだけで、それでお金を稼ぐことはできません。\n\n### 小さく始める\n\n![f:id:o_tomomichi:20180115153402j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153402.jpg \"f:id:o_tomomichi:20180115153402j:plain\")\n\n大きな失敗を見ることも多いです。 アイデア出しの段階では大きなことを考えてしまうので、宇宙関連の会社を作りたい！などと始めてしまいがちです。 けどそれでは全然だめで、まだ何の実績もないあなたは、事業をうまく進めることができません。 非常に小さいところから始めないといけないのです。\n\nイーロン・マスクを見てください。 彼が最初に取り組んだのはPayPalで、それは旧式のスマホであるPalm Pilots用の支払いアプリでした。 PayPalは大きくなって、彼は多くの人と一緒に事業を売却し、最終的に20年経って、ついに宇宙の会社を始めています。\n\nだからゆっくり始めてください。 小さなものを作り、小さくてニッチな問題を解決してください。 いくらかのお金を稼ぎ、ニッチな市場で成長を続けるのです。\n\nNomad Listはノマドにフォーカスしていましたが、今はもっと大きくしようとしています。 ノマド市場の約10倍から100倍の規模がある、旅行市場全体に広げていこうと思っているのです。\n\n大きく始めるのではなく、ニッチを成長させるのです。わかりますか？\n\n小さく始めましょう。その方がずっといいのです。\n\n![f:id:o_tomomichi:20180115153403j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153403.jpg \"f:id:o_tomomichi:20180115153403j:plain\")\n\nそれに、ニッチであることは本当にクールです。 例えばあなたが100ドルのプロダクトを持っているとしたら、100万ドル稼ぐために10,000人のユーザーしか必要ないのです。\n\nこれに気づいたとき、私はショックを受けました。 計算間違いじゃないのか？間違いではありません、100万ドルです。 100万ドルを稼ぐためでも、そんなに多くのユーザーは必要ではないのです。 あ、（スライドを）写真に撮っても大丈夫ですよ。 必要なのは少数のニッチなユーザーです。 みんな写真撮りましたか？フラッシュはうまく効かなかったみたいですね（笑）\n\n### アイデアリスト\n\nさて、アイデアリストを作るのもいい考えです。私も作りました。\n\nアイデアを思いつくたびに、リストに追加していきます。 どうしようもないアイデアばっかりになりますが、何でも構いません。 どれが有望そうで、どれが自分の中でずっと引っかかるかを見るのです。 そのうちどれかを作り始めるかもしれません。\n\nアイデアを残しておくのはいいことです。 WorkFlowyやTrelloなどを使ってください。 あとで必要になるかもしれないので、アイデアを書き留めておきましょう。\n\n私の場合、リモートワークに関するアイデアの多くは、実際に作り始めるより何ヶ月も前に思いついていました。 頭の中でアイデアが沸騰するまでには時間がかかるのです。\n\n### ひとりでやる\n\n![f:id:o_tomomichi:20180115153343j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153343.jpg \"f:id:o_tomomichi:20180115153343j:plain\")\n\nもうひとつ、ものすごく大事なアドバイスがあります。 そしてこれは、他のほとんどの人が言うことと矛盾したアドバイスです。\n\n自分ひとりでやってください。他の人と一緒にやらないでください。 あなたがビジネスサイドの人間でも、技術がわかる共同設立者は必要ありません。 プログラミングを学んでください。デザインも学んで、自分でやるのです。 基本的なことを全部自分でできると、時間を大幅に節約できます。\n\nそして「Group Think（グループ思考）」、これが非常に危険です。 2、3人でスタートアップを始めるようなケースで、私も経験しました。\n\n人は、お互いに褒め合う傾向があるのです。 「おお、このドッグフードデリバリーのアイデアは、世界のエコシステムを変えるぞ！」 残念ながら、そんなことはありません。 仲間内で褒め合っているだけです。\n\nもしあなたが一人であれば、この罠を避けられます。 なぜならほとんどの場合不安定な状況にいるので、より慎重になるからです。\n\nそれに、一人でやるのもちょっと良いものです。あなたはより速く、よりよく進めることができます。\n\n### アイデアを共有する\n\n![f:id:o_tomomichi:20180115153404j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153404.jpg \"f:id:o_tomomichi:20180115153404j:plain\")\n\n多くの人が、「私はスタートアップで働いていますが、今はステルスなのでアイデアを教えることができません。他の人に盗まれてしまいますからね」と言います。\n\n大間違いです。誰もあなたのアイデアを盗もうとはしません。大事なのは実行することなのです。 結局のところ、みんなが同じようなアイデアを思いつくのですから。 実行することが、あなたのアイデアをオリジナルでユニークなものにします。\n\nなので、アイデアを共有するのは良いことです。 人と話すことで、実際にサービスを作る前に潜在的なユーザーと話すことができるからです。 どんどんアイデアをシェアしましょう。\n\n* * *\n\nビルド（構築）\n-------\n\n![f:id:o_tomomichi:20180115153405j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153405.jpg \"f:id:o_tomomichi:20180115153405j:plain\")\n\nすでにアイデアがあったり、あるいは最終的にアイデアを手に入れたら、次は実際にプロダクトを構築します。 どうやって作りましょう？\n\n![f:id:o_tomomichi:20180115153342j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153342.jpg \"f:id:o_tomomichi:20180115153342j:plain\")\n\n多くの人は、コードを学ぶためにcoding bootcampやcode academyのようなところに行く必要がある、と考えます。 私はオススメしません。 そういうところに行くと、数ヶ月から数年かかってしまいますし、うまくいくとも思えません。 ちょっと疑わしいですね。\n\n私は、独学でプログラミングを学ぶべきだと思います。\n\n### 自分でやる\n\n![f:id:o_tomomichi:20180115153406j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153406.jpg \"f:id:o_tomomichi:20180115153406j:plain\")\n\nシンプルに「ウェブサイトの作り方」でググりましょう。 私はそうしました。 私の周りで成功した多くの人も、そうやってきました。\n\nプログラミングとビジネスで一番大事なことは、学び方自体を学ぶこと、どうやって物事を理解するかを学ぶことなのです。 それはとても実用的な知識であり、物事の進め方を知るということは、起業家にとって非常に非常に重要なことなのです。\n\n誰かに電話をかけて「なぁ、これはどうやってやるんだろう？」と聞いたり、本を探しに行ったりするのではなくて。 自分でやってください。 なぜかって？いまやすべての情報がインターネットにあるからです。\n\n![f:id:o_tomomichi:20180214120355p:plain](https://storage.googleapis.com/blog-notsobad/images/20180214120355.png \"f:id:o_tomomichi:20180214120355p:plain\")\n\n答えはYouTubeにあります。Stack Overflowにあります。Googleにあります。 だから自分で簡単に見つけることができます。\n\n繰り返しますが、それが一番重要なスキルなのです。学び方を学ぶことです。\n\n### それでもプログラミングしたくない\n\n![f:id:o_tomomichi:20180115153407j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153407.jpg \"f:id:o_tomomichi:20180115153407j:plain\")\n\nもしあなたが本当に頑固で、「いやPieter、それでも私はプログラミングはやらないよ」と言うのなら、Typeformを使ってください。 Typeform.comは、フォームを作成できるサイトで、支払いを受け付けることもできます。 コーディングする必要もなく、フォームを使ってちょっとしたミニスタートアップを構築することもできます。\n\n![f:id:o_tomomichi:20180115153408j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153408.jpg \"f:id:o_tomomichi:20180115153408j:plain\")\n\nこのように、クレジットカード情報を入力して、実際に支払うこともできます。 Stripeなどで支払いを受けつけることができます。\n\n![f:id:o_tomomichi:20180115153341j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153341.jpg \"f:id:o_tomomichi:20180115153341j:plain\")\n\nもうひとつクールなアプリを紹介しましょう。 Carrdというものです。 私の友人AJによって作られたサービスで、最高にクールです。\n\nこのサービスを使うと、プログラミングなしで本当に高度なウェブサイトを作ることができます。 私はこのページを昨日作りました。\n\n荷物のピックアップサービスです。ほぼ何もせずにこんなページを作成することができました。\n\nもしユーザーが集荷希望をスケジュールに入れると、Zapierに送られます。 そしてAPIで連携して、実際に荷物がピックアップされます。\n\n実際に稼働しているわけではありませんが、やろうと思えばこういうことができるのです。\n\n![f:id:o_tomomichi:20180115153409j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153409.jpg \"f:id:o_tomomichi:20180115153409j:plain\")\n\n私もそうです、最初はスプレッドシートから始めました。\n\n私はいいプログラマではありませんでした。 WordPressのテーマ多少作ることはできましたが、大したことはできません。\n\nだから必要なことは都度Googleで学びました。 何かを本当に学ぶ必要が出てきたときに、それを学んだのです。 問題が起こるたびにGoogleに行き、解決してきました。\n\nその状況で学ぶことから逃げていたら、自分のスタートアップが失敗していくのを見ているしかありません。 これはいい制約です。\n\nみんなにダサいサービスだと思われたくないから、必死になってボタンとロゴを整列させる方法を学びます。 これは学習のためのいい動機づけです。\n\n### プロトタイプに時間をかけすぎない\n\n![f:id:o_tomomichi:20180115153340j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153340.jpg \"f:id:o_tomomichi:20180115153340j:plain\")\n\nあるいはまた、何年も何ヶ月もかけてスタートアップを作ろうとしている人も見てきました。 「ええ、私たちはこのプロダクト開発を6ヶ月間やっています。まだ顧客はいませんが、デザインは完璧で美しいんです！」 これもダメです。\n\nプロトタイプの作成にかけるのは、最大1ヶ月までにしましょう。もちろんいいプロトタイプでないとだめですが。 ローンチしないと検証できないこともあるため、ここに時間を使いすぎてはいけません。 これは非常に重要なことです。\n\n* * *\n\nローンチ\n----\n\n![f:id:o_tomomichi:20180214120608p:plain](https://storage.googleapis.com/blog-notsobad/images/20180214120608.png \"f:id:o_tomomichi:20180214120608p:plain\")\n\n次はいよいよローンチ、大事なところです。\n\n無事にプロダクトを作ったら、実際にユーザーを獲得したいですよね。 これはすべてのスタートアップにとって最も重要なステップです。 なぜなら、そのプロダクトが本当に有用かどうか、収益化できるかどうかの検証になるからです。\n\n### Product Hunt\n\n![f:id:o_tomomichi:20180215110453p:plain](https://storage.googleapis.com/blog-notsobad/images/20180215110453.png \"f:id:o_tomomichi:20180215110453p:plain\")\n\nスタートアップをローンチするためのプラットフォームがあります。 Product Huntは、その中でももちろん最大の一つです。 約10,000人のユーザー、10,000人の訪問を得ることができます。 経験上、そのうち10％くらいがコンバージョンしてくれるかもしれません。\n\nProduct Huntをうまく使うTipsは、プロダクト全体を本当にすばらしいものに見せることです。 アニメーションGIFも載せましょう。すばらしいキャッチコピーを作りましょう。\n\n友人に、あなたのスタートアップに最適なキャッチコピーについて聞いてみてください。 スタートアップのキャッチコピーの多くは誇大表現になっていて、私にはそれが実際何を意味するのか分かりません。 だからシンプルにしてください。Product Huntでうまくいくためには、それが非常に重要です。\n\nProduct Huntはサンフランシスコのタイムゾーン、太平洋標準時（PST）で動いています。 つまり場合によっては、サンフランシスコ時間で真夜中まで起きて投稿する必要があるのです。 もしあなたが好きな時に、たとえばバリ時間で午後4時に投稿すると、サンフランシスコでは午後1時で、その日のProduct Huntでランキングに入るには少し遅すぎます。 ランキングで上位に入りたいなら、投稿時間は非常に重要です。\n\nまたProduct Huntを利用するときは、積極的にコメントを活用してください。 みんなと会話をするのです。 マーケティングっぽくはしないでください。 正直に振る舞い、バグはすぐに修正すると伝え、フレンドリーにしましょう。 人間味を出してください。それが非常に重要です。\n\n### Hacker News\n\n![f:id:o_tomomichi:20180115153410j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153410.jpg \"f:id:o_tomomichi:20180115153410j:plain\")\n\nもうひとつ、Hacker Newsもあります。 これも非常に重要です。 ここのコメントが、あなたのスタートアップを丸ごと台無しにすることもありえます。\n\nここでは、マーケティングっぽくしないことがさらに重要です。 できるだけフランクで誠実に、人間らしく振る舞うようにしてください。\n\nもしあなたがフードデリバリーアプリを作る場合、「フードデリバリーアプリを作ったよ」と書いて、それから何かユニークなことを言ってください。 投稿はオリジナルな内容で、かつフレンドリーにしましょう。\n\nスパムはだめです。お互いにいいねし合う、互助会みたいなこともしないでください。 まったく意味がありません。すぐにバレて、あなたの評価を下げるだけです。\n\n### Reddit\n\n![f:id:o_tomomichi:20180115153411j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153411.jpg \"f:id:o_tomomichi:20180115153411j:plain\")\n\nRedditは非常に、非常に巨大です。 先に出てきたHacker News、Product Huntの100倍くらい巨大です。 Redditはプロダクトローンチのプラットフォームとして、いま急速に主流になってきていると思います。\n\nRedditもまた、スパムが好きではありません。マーケティングが好きではありません。こうした投稿はすぐに削除されます。\n\nRedditについて重要なことは、subreddits（訳注：2chでいう「板」）に投稿するということです。 たとえばあなたが馬を管理するためのアプリを作っているなら、「r/horse」のsubredditに行って、フレンドリーに振る舞うのです。 「やぁ、馬管理アプリを作ってみたよ。よかったらフィードバックしてくれないかな」\n\nもし投稿がupvote（いいね）されてみんなに気に入られたら、トップページに掲載されるチャンスです。 私はこれを二度経験しました。Nomad Listのときと、Hoodmapsのときです。\n\n問題は、トップページや2〜3ページ目に載ると、アクセス過多でサーバが死ぬことです。 秒間何千人もの人がサイトを訪れるため、技術的な話をすると、ページを静的にしておくほうがいいでしょう。 PHPやJSの代わりに、純粋なHTMLで作成してください。静的にして、アクセスに耐えられるようにします。\n\n事前にテストもしておいてください。 なぜなら、サーバが遅いとほとんどの人がフロントページにも来てくれないからです。 しかしうまくやれば何十万人ものユーザーが来てくれます。40万人、もしかしたら50万人、クレイジーですね！\n\n### ニッチな専門サイト\n\n![f:id:o_tomomichi:20180115153339j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153339.jpg \"f:id:o_tomomichi:20180115153339j:plain\")\n\nそして、「Horse Forum」これがとても重要です（笑）。\n\n「このスライドは一体何なんだ？」と思ってますよね。違います、これが本当に重要なんです。\n\nたとえば馬の管理アプリを作成する場合、ニッチな市場に入っていくわけです。 そのニッチなマーケットに特化したウェブサイトを見つけましょう。 この場合は馬です。そしてそのニッチなサイトにあなたのプロダクトのことを投稿します。 そこから先は、さっきと同じです。人間味を出してください。\n\nここにいるのは、最高のユーザーになる可能性のある人たちです。 なぜなら、あなたのアプリは彼らの生活にとても関係しているからです。 その人たちは厩舎を持っていたり、まぁ何でもいいのですが、あなたのアプリを必要としている人たちです。 だからそこに投稿しましょう。\n\n![f:id:o_tomomichi:20180115153412j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153412.jpg \"f:id:o_tomomichi:20180115153412j:plain\")\n\n投稿先がボディビルディング掲示板のこともあるでしょう。あなたがボディビルディングアプリを作っているのなら。\n\n![f:id:o_tomomichi:20180115153413j:plain](https://storage.googleapis.com/blog-notsobad/images/20180115153413.jpg \"f:id:o_tomomichi:20180115153413j:plain\")\n\nそしてこれはオートバイ用のsubredditです。バイクアプリを作れば、きっと評価されるでしょう。\n\n### Q&A\n\nローンチに関して何か質問はありますか？\n\n観衆：「新しいスタートアップを始めるときに、何かいつもやっていることはありますか？たとえば競合分析などはしているのでしょうか」\n\nいい質問ですね。競合分析をすることもあります。同じようなアプリが既に存在しているかを確認したり。\n\nただ正直なところ、アプリがすでに存在しているからって、新しいアプリを出せないというわけではありません。 逆に、競合が存在しないところにアプリを出したけど、そもそも市場が存在しなかったということも多いです。\n\nだからよくあるのは、既に競合がいるけれど、大したことがなくてユーザーもいない、壊れていたりひどいことになっている、というケースです。 その場合は、ただそれよりいいものを作ればいいのです。\n\n私は何度もそうやってきました。競合はたくさんいて、以前は大きなサイトだったけれど、いまはもう使えなくなっていたり。 そうなれば話は簡単です。ただ彼らの立場を引き継ぐだけじゃなくて、より大きいトラフィックを得ることもできます。\n\nただ私は少し傲慢なので、「俺ならこいつらよりうまくやれるぞ」と飛び込んでしまうことが多いです。時々、それで失敗するのですが。（笑）\n\nでもたいていは、10回のうち1回くらいはうまくいって、いいものを作ることができます。 だからちょっと傲慢に考えるくらいがうまくいくと思います。\n\n観衆：「やることがたくさんありますが、何かチェックリストのようなものはありますか？」\n\nチェックリストがあるか？私がローンチ時にやることのチェックリストですね。 私はProduct Huntに投稿し、Redditに投稿し、Hacker Newsに投稿します。全部同じ日です。 まとまったトラフィックが欲しいですからね。\n\nうまくいけばその日1日が、あなたのスタートアップのための日みたいになります。 みんながずっとそれについて話しているのです。これは指数関数のように巨大な効果があります。\n\nでもチェックリストというとちょっと、、そうですね。 ツイートして、Facebookでシェアして、それからさっきのサイトに投稿する。 うん、それだけですね。\n\n* * *\n\n（後編に続く）\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=http%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F19%2F095533\" title=\"【翻訳】サイドプロジェクトから収益性のあるスタートアップに育てる方法（後編） - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.notsobad.jp/entry/2018/02/19/095533\">blog.notsobad.jp</a></cite>\n\n※後編は残りのプロセス、「グロース」「マネタイズ」「自動化」「Exit」について。 特にグロース・マネタイズの部分がおもしろいですよ！","date":1518827038000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180211231653.png","tag":["個人開発論","levelsio","翻訳"]}}]},"tag":"個人開発論","page":1,"hasNextPage":true},"__N_SSG":true}