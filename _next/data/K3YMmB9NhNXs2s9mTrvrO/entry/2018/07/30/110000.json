{"pageProps":{"entry":{"title":"作ったWebサービスが誰からも使われなくてさみしい問題を解決する（しない）意識低い方法論","slug":"2018/07/30/110000","excerpt":"![f:id:o_tomomichi:20180728192324g:plain](https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif \"f:id:o_tomomichi:20180728192324g:plain\")  \n[http://jigokuno.com/eid\\_69.html](http://jigokuno.com/eid_69.html)\n\n個人開発でWebサービスを作ったものの、全然ユーザーが集まらなくて自然消滅、、というのはよくある話です。 おそらく個人開発者の一番の悩みは「作ったものが誰からも使われない」でしょう（当社調べ）。\n\nこの記事では、この問題に対するおそろしく意識の低い方法論を整理してみたいと思います。\n\nめっちゃバズらせる・ヒットさせる方法論ではなく、あくまでバズらないWebサービスでもさびしく孤独死するのを避けたい…という後ろ向きなハックですのであらかじめご了承ください。","content":"![f:id:o_tomomichi:20180728192324g:plain](https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif \"f:id:o_tomomichi:20180728192324g:plain\")  \n[http://jigokuno.com/eid\\_69.html](http://jigokuno.com/eid_69.html)\n\n個人開発でWebサービスを作ったものの、全然ユーザーが集まらなくて自然消滅、、というのはよくある話です。 おそらく個人開発者の一番の悩みは「作ったものが誰からも使われない」でしょう（当社調べ）。\n\nこの記事では、この問題に対するおそろしく意識の低い方法論を整理してみたいと思います。\n\nめっちゃバズらせる・ヒットさせる方法論ではなく、あくまでバズらないWebサービスでもさびしく孤独死するのを避けたい…という後ろ向きなハックですのであらかじめご了承ください。\n\n---\n\n## 目次\n \n \n#### そもそも、なんでWebサービスは死ぬのか\n\n*   Webサービスの死因\n*   よくある個人開発サービスの一生\n*   「バズか死か」の二元論を避ける\n\n#### 死なないサービスを作る（意識低い）方法論\n\n*   【1】CGMじゃなくてツール型にする\n*   【2】できるだけ何も作らない\n*   【3】絶対に赤字にはしない\n\n#### 注意と言い訳\n\n*   死なないだけだと、ただのゾンビ👻\n*   最後は確率論なので、いっぱい作ろう😇\n\n#### まとめ\n\n---\n\nそもそも、なんでWebサービスは死ぬのか\n--------------------\n\nいきなり哲学的な見出しになったけど、もちろん中身は意識低い話です。\n\n### Webサービスの死因\n\n完全に私見ですが、「サービスの死」とは以下３つの状態を指します（断言）。\n\n###### 【死因①】ノーコンテンツ\n\nコンテンツがメインの価値になるサイトで、コンテンツが圧倒的に少ない OR あっても全然更新されてないなどで、有用なコンテンツがない（あるように見えない）。\n\n###### 【死因②】動かないシステム\n\nシステムのエラーなどで、本来の機能を利用できない状態が放置されている。 （Twitterログインが機能していない、など）\n\n###### 【死因③】サイトの消滅\n\nドメインが切れてて、そもそもサイトにアクセスできない。サーバを解約して、もう何も動いていない。\n\n狭義には③が完全な死ですが、①と②みたいなサイト見たときも、実質死んでるって判断しますよね。\n\n\n### よくある個人開発サービスの一生\n\n上記の死因を踏まえて、個人開発でよくあるWebサービスの一生は、こんな感じでしょうか。\n\n*   サービスリリースしたけど全然使われず、がんばって自分で投稿したりする\n*   がんばって宣伝したりするけどやっぱり使われず、自分でも投稿しなくなり放置されだす（①ノーコンテンツ）\n*   ライブラリや連携外部サービスのアップデートに追従しなくなり、サービスが動かなくなる（②動かないシステム）\n*   ドメイン代がもったいなくて、更新をやめる（③サイトの消滅）\n\n＿人人 人人＿  \n＞ 突然の死 ＜  \n￣Y^Y^Y^Y￣\n\n身に覚えがありすぎて、書いてて動悸が激しくなってきた。。\n\n恥を承知でさらすと、わたしのサービスもこんなのばっかりです。\n\n##### ☠失敗例☠ book loves music（ブック・ラブズ・ミュージック）\n\n読書にぴったりの音楽をおすすめし合うサービス。2011年くらいに作ったデビュー作です。\nユーザーが本に合う音楽をセレクトすると、Youtubeのプレイリストとして再生できるというサービスでした。\n\nサイトコンセプトが受けたのか、リリース直後には複数のメディアに掲載されるなどプチバズを経験。\nしかし99％のユーザーは投稿されてるコンテンツをざっと見るだけで、誰もコンテンツを投稿したりはしてくれませんでした。\n\nコンテンツがスカスカなので一度来てくれた方もそのまま離脱して戻らず、ますますサイトは過疎化の一途。\n結局半年ほどは自分で投稿したりして運用を続けたものの、力尽きてそのまま死を迎えました。\nあるある過ぎて泣けてきますね。。\n\n### 「バズか死か」の二元論を避ける\n\nここまでWebサービスの死因とよくあるライフサイクルを整理してみました。 このパターンで一番問題なのは、モチベーションが続く間に軌道に乗らないと、ほぼ間違いなく死んでしまうということです。\n\n誰も使わない状態を自分ひとりで支えてるので、モチベーションが尽きると更新も止まり、そのまま上記の死をすべて経験することになってしまうのですね。。 もちろんそれまでにサービスがバズって軌道に乗ればいいのですが、そうならないことも多い。\n\nそしてどんなにテンション高くはじめても、モチベーションはいつか絶対に落ちます（断言）。 波があるのは当然なので、モチベーションが下がってもサービスが死なない設計・運用にしたい。\n\nサービスリリースすると、ついつい「バズか死か」みたいな二元論で考えちゃうことが多いんですけど。 そうじゃなくて、死ににくい設計で長期運用を可能にし、モチベーションの波と付き合いながらのんびりサービスを育てていく。 そんな方法を考えてみるのが、この記事の目的です。\n\n* * *\n\n死なないサービスを作る（意識低い）方法論\n--------------------\n\nというわけで死なないサービスを作る方法ですが、大きな死因が3つあったので、これを順番につぶしていけば必然的に死亡率を下げることができますね。さっそく見ていきましょう。\n\n### 【1】CGMじゃなくてツール型にする\n\nまず一番大きいのがこれです。 死因①の「ノーコンテンツ」はCGMだから起きる問題なので、CGMをやめるだけで大きな死因を１つ減らすことができます。\n\n#### CGMはむずかしい\n\nここで「CGM（Consumer Generated Media）」とは\n\n> ユーザーの投稿コンテンツがサイトの中心的な価値となるようなサービス\n\nのことを指します。 例は多すぎて不要かと思いますが、TwitterとかCookpadなんかが有名どころですかね。\n\nCGMはコンテンツが集まると圧倒的な価値が出るのですが、最初のコンテンツ集めが難しかったりします。 コンテンツがないから人が集まらず、人が集まらないからコンテンツも増えないという「ニワトリ🐔・タマゴ🐣」問題ですね。\n\n※もちろんCGMをうまく回す方法論もあるわけですが、それができる人はそもそもこんな記事読まないでしょうし、ここではあくまで意識低い方法を考えます。\n\n#### ツール型にしたらいいじゃない\n\nというわけで意識低い解決策としておすすめなのが、「ツール型」のサービスにすることです。 ここでツール型とは\n\n> 他のユーザーが誰も使っていなくても価値を提供できるサービス\n\nと定義してみます。\n\n##### 💡具体例💡 [THE TOURNAMENT（ザ・トーナメント）](https://the-tournament.jp)\n\nWeb上で簡単にきれいなトーナメント表が作れるという超絶地味なサービスです。\n4年前にリリースしてから一度もバズったことはないですが、検索で着々と利用者数を増やし、現在では有料の法人利用も増えてきています（感謝）。\n\nこのトーナメントは典型的なツール型で、最初の2年くらいはごく少数の方に細々使われる程度でした。\nしかし誰も使っていなくてもサイトの有用性に影響はないため、時間をかけてゆっくり検索流入が増えるのを待つことができました。\n\nCGMだと寂れるとますます寂れるという負のループが働いてしまうわけですが、ツール型はその心配がありません。\nまたサイトが育つまでほぼ放置していただけなので、その間は他のサービスの開発に時間を使うことができました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fthe-tournament.jp%2F\" title=\"THE TOURNAMENT | 簡単・便利な無料のトーナメント表作成サービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://the-tournament.jp/\">the-tournament.jp</a></cite>\n\n\n#### SNS連携型もあるよ\n\nまた純粋なツール型とはちょっと違うタイプとして、質問箱からブームが続く「SNS連携型サービス」もあります。 これも他のユーザーがいなくても価値を提供できるタイプのサービスですね。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fhyou.show%2F\" title=\"ウェブ表彰 | 気軽に誰かを称賛しよう\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://hyou.show/\">hyou.show</a></cite>\n\n最近大流行したウェブ表彰。やさしいインターネットを作る世界観がとても好きです。\n\nこのタイプのサービスについては、質問箱を開発したせせりさんのこんな記事もあります。 <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.sesere.net%2Fentry%2F2017%2F10%2F30%2F105325\" title=\"【最高のサービスは診断メーカー】資金力も知名度も無い初心者のwebサービス運営者が現実的にユーザーを獲得できるサービスの設計方法 - 考えすぎてしまう人のブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"http://blog.sesere.net/entry/2017/10/30/105325\">blog.sesere.net</a></cite>\n\nこちらでも同じように「ひとりから使えること」の重要性を指摘されてますね。 このSNS連携型だと、作ったコンテンツが拡散力を持ちやすいという点で、純粋なツール型より爆発力があります。\n\n#### （補足）ツール型の弱点\n\nとりあえずCGMをやめることで「ノーコンテンツ」による即死は避けれるわけですが、ツール型にも弱点があります。\n\nまず純粋なツール型は、集客が弱くなりがちです。 トーナメント作成サービスとか見てもらうとわかりますが、バズる要素はまったくないですねw\n\n基本的にツール型は検索流入を地道に拾うのがメインになります。 時間がかかるし爆発力もないですが、検索流入を取れればその後は安定したアクセスを期待できます。\n\nまたSNS連携型の方は拡散力がすごいのですが、初速で火がつくまで至らなかったときや、いったんブームが落ち着いて誰も使わなくなったときに、再度盛り返すのが難しいんじゃないかなーという気がしてます（作ったことないから知らんけど）。\n\nマシュマロさんくらい常時使われる状態になれば、永遠にバズって新規開拓を繰り返せそうですが。。 <iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fmarshmallow-qa.com%2F\" title=\"マシュマロ\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://marshmallow-qa.com/\">marshmallow-qa.com</a></cite>\n\nトーナメントは検索以外にも工夫した結果、多いときで月間150万PVくらいまで伸びてきました。 ツール型をどうやって成長させるかは、長くなるのでまたそのうち改めて整理できたらいいなと。 （いまも試行錯誤中ですが。。）\n\n* * *\n\n### 【2】できるだけ何も作らない\n\n2つ目の死因は「動かないシステム」でした。\n\n放置したシステムが動かなくなる危険性は、定期的にやってきます。 Twitterログインの仕様が変わる、使っている言語やフレームワークのバージョンがサポートされなくなる、など。。\n\n生きているサービスはこれらの波を乗り越えて寿命を延ばし続けるわけですが、どこかで開発者がこの対応を諦めると、そこでシステムとして死ぬことになります。\n\n#### めんどくささ vs モチベーション\n\nこの対応あきらめるかどうかの判断をとても頭が悪い式で整理すると、\n\n> 対応あきらめるとき　=>　モチベーション　＜　対応のめんどくささ\n\nとなります。式にする必要あった？\n\nユーザーにすごく使われてる、売上が上がってるとかだと、問題が起きてもちゃんと対応しますよね。 そうじゃなくてもサービスつくった直後で気合が入ってるときなら、むざむざシステムの致命的なバグを放置しないと思います。\n\n問題はリリースからしばらく経ったのにサービスが伸びてなくて、それでもメンテナンスに工数を取られるという状態です。 2年前に作って誰にも使われず放置してるサービスでRailsのメジャーバージョンアップしなきゃってなったら、やりたくないですよね。 （それなら最初から新バージョンで新しいサービス作りたいw）\n\n#### 作らなければ壊れない\n\nこの問題を完全に防ぐのは難しいのですが、ある程度対策することはできます。\n\nまず前提として、モチベーションに期待するのはやめて、工数＝めんどくささを減らす方向で考えます。 障害はいつ来るかわからないのに、何年もモチベーション保ち続けるとかはだいぶしんどいです。\n\nじゃあどうやって致命的な問題の発生頻度を減らすかっていうと、一番いいのは「極力何も作らない」こと。意識低い。。\n\n##### 💡具体例💡 ブンゴウメール\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fbungomail.com%2F\" title=\"ブンゴウメール | 1日3分のメールでムリせず毎月本が読める、忙しいあなたのための読書サポートサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://bungomail.com/\">bungomail.com</a></cite>\n\n青空文庫の名作小説を1ヶ月で読み切れるように小分けして、毎日少しずつメールで配信してくれるサービスです。\nありがたいことにリリース後にTwitterで大きな反響をいただき、メディアなどにも多数取り上げていただきました。\n\n作ってるときはちゃんと使われる自信なんて全然なかったのですが、自分がほしいサービスだったので、仮に流行らなくても長く使い続けられるよう極限までシンプルな作りにしています。\nその結果、リリース時はフレームワークなど何も使わない、わずか150行のRubyスクリプトになりました。\nローカルで実行すると、指定した作品を分割して1ヶ月分予約配信するというだけの超ミニマムプロダクトです。\n\nここまで小さいと滅多に不具合も出ないし、仮に何かあってもすぐに直せます。\nいわゆるMVP（Minimal Variable Product）という考え方ですが、MVPの状態で長期運用できるように設計しておくと、芽が出るまで放置して育てることができますね。\n\n* * *\n\n### 【3】絶対に赤字にはしない\n\n3つ目の死因は「サイトの消滅」でした。 これはドメイン切れやサーバの契約解除など、どちらもお金の問題が関わってきます。\n\nいまは小規模な個人サービスで大きな赤字が出ることはないと思いますが、たとえ小さくても赤字の状態だと、どこかで支払うのをやめちゃう恐れがあります（経験あり）。\n\nというわけでこれに対する対応はシンプルで、「絶対に赤字にしない」ことです。\n\n#### サブドメインからはじめる\n\nびっくりするくらい小さい話ですが、大事なところです。 これによってドメイン切れによる死を事実上なくすことができます。\n\nドメイン死で一番多いパターンは、ドメイン取得してサービス作って、全然使われなかったので1年後の更新をせずにそのまま終了、というやつですよね（何回もやった）。\n\nサービスをサブドメインで始めることで、この悲劇は簡単に避けることができます。 自動更新してずっと使う主要ドメインを持って、新規サービスはそのサブドメインを使えばいいですね。\n\n最初にかっこいいドメインを取ってテンションを上げる「ドメイン駆動型」開発も好きですが、長生きさせたいならサブドメインから始めてもいいんじゃないかなと思いますよ。\n\n順調に育ってきたら、あとから独自ドメインにしたらいいですからね（逆はむずかしい）。\n\n##### 💡具体例💡 スマホde百人一首\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fkarta.notsobad.jp%2F\" title=\"スマホde百人一首\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://karta.notsobad.jp/\">karta.notsobad.jp</a></cite>\n\nみんなのスマホを百人一首の取り札にして遊べるサービスです。お正月にでもぜひどうぞ🎍\n\n独自ドメイン取ってたら絶対更新してなかったであろうこんな一発ネタサイトも、サブドメインにしてるおかげでいまだに動いています。（自己紹介でのウケはいいです）\n\n作ってから4年以上放置してるし今後も改修の予定はありませんが、少なくともドメイン切れの心配はありません。\n毎年ドメインを更新するかどうかで悩むことがないのはとても快適ですね。\n\n#### サーバももちろん無料で\n\nこちらも大事。 月数百円程度のサーバ代でも、数年前に作ってまったく使われてないサービスのためだけに払ってたりすると、そのうち解約したくなる日が来たりします。\n\nわたしはHerokuやFirebaseを使うことが多いですが、他にも無料プランで使えるサービスも多いと思うので、ぜひ無料で始めましょう。 無料プランでも工夫すればけっこうな規模まで対応できます。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F02%2F04%2F170844\" title=\"Herokuの無料プランで月間100万PVをさばく（さばかない）話 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/02/04/170844\">blog.notsobad.jp</a></cite>\n\nとはいえいまはFirebaseが尋常じゃなく便利なのでおすすめですよ。みんなFirebase使おう！\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.notsobad.jp%2Fentry%2F2018%2F03%2F31%2F132507\" title=\"3年間運用してきたWebサービスを「Rails x Heroku」から「Riot.js x Firebase」に移行した話 - NOT SO BADなブログ\" class=\"embed-card embed-blogcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.notsobad.jp/entry/2018/03/31/132507\">blog.notsobad.jp</a></cite>\n\n\n##### 💡具体例💡 ゾラサーチ\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fsearch.bungomail.com%2F\" title=\"ブンゴウサーチ by ブンゴウメール | 青空文庫の作品を読了時間で検索できるサービス\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://search.bungomail.com/\">search.bungomail.com</a></cite>\n\n青空文庫の作品を目安の読了時間で検索できるサービスです。前述のブンゴウメールの姉妹サービスとして作りました。\n\nブンゴウメールは超ミニマムプロダクトとしてリリースしたのですが、ありがたいことにユーザー数と機能要望も増えたため、その後Railsアプリとしてリニューアルしていました。\nその過程で青空文庫データが大量に蓄積されたので、それを活用しつつまたもや自分がほしかったサービスを作った感じです。\n\nしかし極力管理の手間は増やしたくなかったので、このゾラサーチはブンゴウメールのRailsアプリにControllerを1つ追加することで実現しています。なんという省エネ。。\n\nサーバももちろん相乗りする形になっているので、追加の費用はかかっていません。\nゾラサーチは売上のないサービスですが、この設計なら赤字にはならないので、サービスを閉じるか悩む必要がありませんね。\n\n---\n\n注意と言い訳\n------\n\n\n### 死なないだけだと、ただのゾンビ👻\n\nというわけで、3つの死因を（ある程度）避ける方法を見てきました。 でもこれだけだと、確かに死んではいないけど、成功してるわけでもありません。\n\n死因のところにも書きましたが、この記事で本当に目指したかったことは、リリースしてすぐに「バズか死か」の二択になってしまう状況を避け、長期的にサービスを成長させる体制を作ることでした。\n\n死なないだけだとただのゾンビです。 目前の死を先送りにできたら、改めてサービスを成長させる方法を考えてみましょう（丸投げ）。\n\n### 最後は確率論なので、いっぱい作ろう😇\n\nまた、サービスを延命させることで成長させるチャンスを増やせますが、 どんなに延命しても伸びないサービスは伸びません（かなしい）。\n\nこれについてはもう散々言われてるように、いっぱい作るしかないと思います。 とはいえスクラップ＆ビルドの繰り返しだと「バズか死か」に逆戻りなので、「ビルド＆ゾンビ」で長寿サービスをいくつも作って、じっくり芽が出るように育てるといいんじゃないですかね。\n\n前述の「ブンゴウメール」はありがたいことにかなり反響をいただいたのですが、実はこれ、2年前に一度リリースしたときは鳴かず飛ばずだったのです。。\n\n前とはコンセプトを変えたとか、文豪系ゲームが増えて意外な反響があったとか、、、色んな要因があるんでしょうが、要は「わからん」と。\n\n最後は確率論なので、あきらめずにいっぱい作りましょう（自戒も込めて）。\n\n* * *\n\nまとめ\n---\n\n思うところがありすぎて、ずいぶん長い記事になってしまいました。。 最後までお付き合いありがとうございます。\n\nまぁ好みが分かれるところではあると思うのですが、こんなやり方もあるよということで誰かの参考になればうれしいです。\n\nおしまい。","date":1532916000000,"image":"https://storage.googleapis.com/blog-notsobad/images/20180728192324.gif","tag":["意識低い","個人開発論","ポエム"]}},"__N_SSG":true}