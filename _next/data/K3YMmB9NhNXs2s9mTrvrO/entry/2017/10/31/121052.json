{"pageProps":{"entry":{"title":"クラウド型IDE「Codeanywhere」×「Firebase」で、PC不要のクラウドプログラミング環境を構築する","slug":"2017/10/31/121052","excerpt":"![f:id:o_tomomichi:20171031110614p:plain](https://storage.googleapis.com/blog-notsobad/images/20171031110614.png \"f:id:o_tomomichi:20171031110614p:plain\")\n\n普段はMacBookとAtomでコードを書いています。\n\nしかし時々夢を見るわけです。これをタブレットとか、何ならスマホでできないのだろうかと。\n\nというわけでそんな環境を実現するべく、クラウドIDEの[Codeanywhere](https://codeanywhere.com/)でFirebaseプロジェクトを動かしてみるのをやってみたメモ。","content":"![f:id:o_tomomichi:20171031110614p:plain](https://storage.googleapis.com/blog-notsobad/images/20171031110614.png \"f:id:o_tomomichi:20171031110614p:plain\")\n\n普段はMacBookとAtomでコードを書いています。\n\nしかし時々夢を見るわけです。これをタブレットとか、何ならスマホでできないのだろうかと。\n\nというわけでそんな環境を実現するべく、クラウドIDEの[Codeanywhere](https://codeanywhere.com/)でFirebaseプロジェクトを動かしてみるのをやってみたメモ。なんでCodeanywhereなのか\n------------------\n\nPCローカルのアプリでなく、クラウド型のIDEというのがけっこう前から存在しています。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.hitorifest.com%2Ftechnology%2Fonline-ide%2F%23Cloud9_8211_Your_development_environment_in_the_cloud\" title=\"プログラミングエディタもクラウドの時代へ、クラウド型IDE 3選\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://blog.hitorifest.com/technology/online-ide/#Cloud9_8211_Your_development_environment_in_the_cloud\">blog.hitorifest.com</a></cite>\n\nただやはりローカルアプリに比べて動作が遅かったりするため、なかなか使ってる人を見たことはありません。\n\nそれは承知したうえで、あえていま試してみようという心意気。\n\nちなみにこの分野の一番人気は、Amazonに買収されて将来性も明るそうなCloud9。\n\nですが今回は全体的なサービスのデザインが好みだったCodeanywhereを選びました。一応こちらも大手。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fcodeanywhere.com%2F\" title=\"Codeanywhere\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://codeanywhere.com/\">codeanywhere.com</a></cite>\n\nなんでFirebaseなのか\n--------------\n\nなんで今回Firebaseかというと、いまFirebaseがアツいからです（当社調べ）。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Ffirebase.google.com%2F%3Fhl%3Dja\" title=\"Firebase\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://firebase.google.com/?hl=ja\">firebase.google.com</a></cite>\n\n弱点だったRealtimeDatabaseの制約も、CloudFirestoreが出たことでかなり改善されました。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fqiita.com%2FYatima%2Fitems%2F54ea22d0cea1acc6cbcb\" title=\"Firebase RTDB + GCP datastore = Firestoreについて第一印象 - Qiita\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://qiita.com/Yatima/items/54ea22d0cea1acc6cbcb\">qiita.com</a></cite>\n\nというわけでFirebaseまじアツいです。アプリじゃなくてWebの人ももっとFirebase使いましょう。\n\nCodeanywhereでFirebaseをローカル起動する\n------------------------------\n\nここからようやく本題。CodeanywhereでFirebaseのプロジェクトを動かすまでの手順です。\n\nサインアップとかはもう終わってる前提で。\n\n### Codeanywhereにプロジェクトをインポート\n\nプロジェクトをインポートするには、Connectionというものを新しくつくります。\n\nインポート先は色々選べるけど、まぁすでにGithubで管理してればそこから持ってくるのが一番楽でしょう。\n\nしばらく待てばエディタ上にプロジェクトのファイルが反映されます。\n\n### コンソールで動かしてみる\n\nCodeanywhereではふつうにコンソール画面が使えます。\n\n最初やり方が見つからなかったけど、Connectionsメニューに追加されたプロジェクト名で右クリックして、「SSH Terminal」を選択すればOK。\n\nコンソールが立ち上がったらさっそくfirebaseコマンドを打ってみますが、これはもちろんエラー。\n\nまずfirebase-toolsをインストールする必要があります。\n\n### nodeをバージョンアップ\n\nこの記事の執筆時点で、Codeanywhereのnodeバージョンは4.4.0。\n\nこのままfirebase-toolsをインストールしても動きませんでした。\n\nのでまずはnodeをバージョンアップ。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fqiita.com%2Fstrsk%2Fitems%2F925644e124efcc964625\" title=\"node.jsのバージョンアップ、バージョン切り替え - Qiita\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://qiita.com/strsk/items/925644e124efcc964625\">qiita.com</a></cite>\n\n    $ nvm ls-remote\n    \n\nでインストールできるバージョンを確認して、この時点で最新の8.8.1をインストールしました。\n\n    $ nvm install 8.8.1\n    \n\nこのままだと次回起動時にまた4.4.0に戻ってるので、デフォルトを8.8.1に設定します。\n\n<iframe src=\"https://hatenablog-parts.com/embed?url=https%3A%2F%2Fqiita.com%2F544%2Fitems%2F7237a32c68619236f446\" title=\"nvmでnode.jsの環境をつくる。 - Qiita\" class=\"embed-card embed-webcard\" scrolling=\"no\" frameborder=\"0\" style=\"display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;\"></iframe><cite class=\"hatena-citation\"><a href=\"https://qiita.com/544/items/7237a32c68619236f446\">qiita.com</a></cite>\n\n    $ nvm alias default 8.8.1\n    \n\n### firebase-toolsインストール\n\nこれで改めてfirebase-toolsのインストールに挑戦。\n\n    $ npm install -g firebase-tools\n    \n\nで入ったらログイン。ローカルじゃないのでオプションを付けます。\n\n    $ firebase login --no-localhost\n    \n\n### ローカルサーバ起動\n\nそれではFirebaseをローカル（Codeanywhere上なので、ローカルじゃないけど）で起動します。\n\n    $ firebase serve --project XXXXX\n    \n\n無事起動しました。しかしこの状態で「Run Project」をクリックしても、プロジェクトのディレクトリが見れるだけです。\n\n![f:id:o_tomomichi:20171031113622p:plain](https://storage.googleapis.com/blog-notsobad/images/20171031113622.png \"f:id:o_tomomichi:20171031113622p:plain\")\n\n### ポート指定してアクセス\n\nこれはデフォルトで80番ポートを見に行ってるみたいなのですが、Firebaseはデフォルトで5000番ポートを使ってます。\n\nどうしようかと思っていると、ポートを指定してアプリケーションを見ることができるようでした。\n\n![f:id:o_tomomichi:20171031113940j:plain](https://storage.googleapis.com/blog-notsobad/images/20171031113940.jpg \"f:id:o_tomomichi:20171031113940j:plain\")\n\nターミナルを開いたときと同じメニューから、「info」を選択します。\n\ninfoタブが開いたら、一番下にポートを指定してアクセスするためのURLが表示されています。\n\n    http://port-XX.PROJECT-NAME-USERNAMEcodeanywhereXXXXXX.codeanyapp.com\n    \n\nこんなやつ。`port-XX`の部分に好きなポート番号を入れてアクセスすればOKです。\n\n### hostも指定する\n\nそして再挑戦。しかし、今度なこんな画面になりました。\n\n![f:id:o_tomomichi:20171031114437p:plain](https://storage.googleapis.com/blog-notsobad/images/20171031114437.png \"f:id:o_tomomichi:20171031114437p:plain\")\n\nfirebaseをlocalhostで動かしていたので、コンテナの外から見れないようです。\n\nというわけでfirebaseの起動オプションを変更。\n\n    firebase serve --project PROJECT-NAME --host 0.0.0.0\n    \n\n最後にhostオプションをつけて、0.0.0.0で動かします。\n\nこれで再度さっきのURLにアクセスしてみると…\n\n見れた！ついにFirebaseをCodeanywhereローカル(？)上で動かせました！\n\nまとめ\n---\n\nこれで夢のクラウドプログラミングやーと満足したのですが、よく考えたらタブレットなんて持っていないことに気づきました。\n\nあとCodeanywhereのiPhoneアプリもあるので入れてみましたが、なかなかバグが多くて実用は怖い感じでした。 （そもそもターミナル機能もなさそう）\n\nというわけで、やっぱりプログラミングはMacBookでやることになりそうです。\n\nよく考えたら本当の不満はAtomが遅いことだったので、いまさらながらSublimeTextデビューしてみようと思います。\n\nおしまい。","date":1509419452000,"image":"https://storage.googleapis.com/blog-notsobad/images/20171031110614.png","tag":["技術系"]}},"__N_SSG":true}